openapi: 3.0.1
info:
  title: Blabo Client API Document
  version: 0.1.0
  description: |
    # Introduction
    Welcome to KKS Blabo Client API documentation.
    # Resize Image
    Please follow the instructions to resize image in this page <a>https://cloudinary.com/cookbook/resize_an_image</a>
    # API Flow
    - <b>Blabo Home page</b>

      ![blabo-home-page](blabo-home-page.png "Home")
    - <b>Row view</b>

      ![row-view](row-view.png "row view")
    - <b>Grid view</b>

      ![grid-view](options.png "grid view")

    - <b>API sequence diagram</b>

      ![client-api-flow](client-api-flow.png "client sequence diagram")

    - <b>Video detail</b>

      ![video-detail](video-detail.png "video detail")

    - <b>Video</b>

    ![video](video.png "video")

    - <b>Package UI</b>

      ![package-ui](package-ui.png "Package UI")
    - <b>Package</b>

      ![package](package.png "package")
    - <b>Unlimited Package</b>

      ![unlimited-package](unlimited-package.png "unlimited package")
    - <b>EPG</b>

      ![epg](epg.png "EPG")
    - <b>Program Detail</b>

      ![program-detail](program-detail.png "program detail")
    - <b>Channel Catchup</b>

      ![channel-catchup](channel-catchup.png "Channel Catchup")
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.blabo.kkv-test.com
    variables: {}
    description: Dev
  - url: https://api.blabo.kkv48.com
    variables: {}
    description: Stag
  - url: https://api.blabo.preottfs.com
    description: Beta
tags:
  - name: Navigations
  - name: Pages
    description: APIs for accessing page resources
  - name: Lines
  - name: Banners
  - name: Contents
  - name: Packages
  - name: Channel
  - name: Program
  - name: Artists
  - name: Account
  - name: Search
  - name: Misc
  - name: Paid-live
  - name: Purchase
paths:
  # /client/v1/navigations:
  #   summary: Retrieve information of navigations
  #   get:
  #     summary: Retrieve information of navigations
  #     description: Retrieve information of navigations
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #     operationId: ""
  #     responses:
  #       "200":
  #       description: Information of navigation
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/NavifationItem"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "404":
  #         description: Resource not found error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - allOf:
  #                     - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
  #                     - properties:
  #                         message:
  #                           example: Collection not found
  #       "409":
  #         description: Conflict error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Navigations
  # /client/v1/navigations/{navigation_item_id}/pages:
  #   summary: Retrieve navigation information of specific item of page
  #   get:
  #     summary: Retrieve navigation information of specific item of page
  #     description: Retrieve navigation information of specific item of page
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - $ref: "#/components/parameters/Page"
  #       - $ref: "#/components/parameters/PerPage"
  #       - name: navigation_item_id
  #         in: path
  #         schema:
  #           type: string
  #         required: true
  #     operationId: ""
  #     responses:
  #       "200":
  #       description: Information of navigation
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/GetNavigationPagesResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "404":
  #         description: Resource not found error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - allOf:
  #                     - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
  #                     - properties:
  #                         message:
  #                           example: Collection not found
  #       "409":
  #         description: Conflict error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Navigations
  # /client/v1/navigations/{navigation_item_id}/subscription-banners:
  #   summary: Retrieve navigation information of specific item of banner
  #   get:
  #     summary: Retrieve navigation information of specific item of banner
  #     description: Retrieve navigation information of specific item of banner
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - $ref: "#/components/parameters/Page"
  #       - $ref: "#/components/parameters/PerPage"
  #       - name: navigation_item_id
  #         in: path
  #         schema:
  #           type: string
  #         required: true
  #     operationId: ""
  #     responses:
  #       "200":
  #       description: Information of navigation
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/GetNavigationPagesResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "404":
  #         description: Resource not found error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - allOf:
  #                     - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
  #                     - properties:
  #                         message:
  #                           example: Collection not found
  #       "409":
  #         description: Conflict error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Navigations
  /client/v1/pages/{page_id}:
    summary: Retrieve information of the specific page
    get:
      summary: Retrieve information of the specific page
      description: Retrieve information of the specific page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: page_id
          description: "The namespace of the page, e.g. <br> STB Home Page: stb_new_home_feature"
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Information the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPageResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Cannot find this page
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Pages
  /client/v1/pages/{namespace}:
    summary: Retrieve information of the specific page
    get:
      summary: Retrieve information of the specific page
      description: Retrieve information of the specific page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: namespace
          description: "The namespace of the page, e.g. <br> STB Home Page: stb_new_home_feature"
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Information the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPageResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Pages
  /client/v1/pages/{page_id}/lines:
    summary: Retrieve lines under the specific page
    get:
      summary: Retrieve lines under the specific page
      description: Retrieve lines under the specific page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: page_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Lines under the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPageLinesResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Pages
  /client/v1/pages/{page_id}/items:
    summary: Retrieve grid view items under the specific page
    get:
      summary: Retrieve grid view items under the specific page
      description: Retrieve grid view items under the specific page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: page_id
          in: path
          schema:
            type: string
          required: true
        - name: filters
          description: Combine multiple filters by the comma seperator
          in: query
          schema:
            example: ui-filter-search-sort-newest,ui-package-playable
            type: string
        - name: sort
          description: "Sort options. This value will replaces the sort setting in filters<br>delivery-start-time:新作順<br>playable-start-time:更新順"
          in: query
          schema:
            type: string
            example: "delivery-start-time"
            enum:
              - "delivery-start-time"
              - "playable-start-time"
        - name: filter_rule
          description: "Filter rule options. This value will replaces the filter setting in filters<br>purchased-contents:セル/レンタル<br>playable-contents:無料/契約中作品"
          in: query
          schema:
            type: string
            example: "purchased-contents"
            enum:
              - "purchased-contents"
              - "playable-contents"
        - name: item_type
          in: query
          description: Default show all types, please use comma to concrete multiple types
          schema:
            example: "paid_live"
            enum:
              - "video"
              - "paid_live"
              - "program"
      operationId: ""
      responses:
        "200":
          description: Lines under the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPageItemsResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Pages
  /client/v1/pages/{page_id}/options:
    summary: Retrieve options under the specific page
    get:
      summary: Retrieve options under the specific page
      description: Retrieve options under the specific page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: page_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Option group under the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPageOptionsResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        # "404":
        #   description: Resource not found error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - allOf:
        #               - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        #               - properties:
        #                   message:
        #                     example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Pages
  # /client/v1/pages/{page_id}/options/{option_id}/options:
  #   summary: Retrieve second level option groups after the first level option is selected
  #   get:
  #     summary: Retrieve second level option groups after the first level option is selected
  #     description: Retrieve second level option groups after the first level option is selected
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - name: page_id
  #         in: path
  #         schema:
  #           type: string
  #         required: true
  #       - name: option_id
  #         in: path
  #         schema:
  #           type: string
  #         required: true
  #     operationId: ""
  #     responses:
  #       "200":
  #         description: Option group under the specific page
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/GetPageOptionsResp"
  #       "400":
  #         description: Bad request error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       # "403":
  #       #   description: Forbidden error
  #       #   content:
  #       #     application/json:
  #       #       schema:
  #       #         anyOf:
  #       #           - $ref: "#/components/schemas/InvalidIPErrorResp"
  #       "404":
  #         description: Resource not found error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - allOf:
  #                     - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
  #                     - properties:
  #                         message:
  #                           example: No related options
  #       "409":
  #         description: Conflict error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Pages
  /client/v1/lines/{line_id}:
    summary: Information of this line
    get:
      summary: Retrieve information of this line
      description: Retrieve information of this line
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: line_id
          in: path
          schema:
            type: string
          required: true
        - name: filters
          in: query
          schema:
            description: Combine multiple filters by the comma seperator
            example: ui-filter-search-sort-newest,ui-package-playable
            type: string
      operationId: ""
      responses:
        "200":
          description: Items under the specific line
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LineInfo"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Line is not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Lines
  /client/v1/lines/{line_id}/items:
    summary: Retrieve items under the specific line
    get:
      summary: Retrieve items under the specific line
      description: Retrieve items under the specific line
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: line_id
          in: path
          schema:
            type: string
          required: true
        - name: filters
          in: query
          schema:
            description: Combine multiple filters by the comma seperator
            example: ui-filter-search-sort-newest,ui-package-playable
            type: string
      operationId: ""
      responses:
        "200":
          description: Items under the specific line
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Line is not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Lines
  /client/v1/player/{item_type}/{item_id}/lines:
    summary: "Retrieve related lines for the item under the player"
    get:
      summary: "Retrieve related lines for the item under the player"
      description: "Retrieve related lines for the item under the player"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: item_type
          in: path
          schema:
            type: string
            enum:
              - "videos"
              - "lives"
          required: true
        - name: item_id
          in: path
          schema:
            type: string
          required: true
        - name: playback_type
          description: The type of the playback
          in: query
          schema:
            type: string
            enum:
              - mezzanine
              - bonus
              - trailer
              - ip_linear
              - self_linear
              - program
              - paid_live
          required: true
        - name: player_type
          description: The type of the player
          in: query
          schema:
            type: string
            enum:
              - "normal"
              - "embedded"
      operationId: ""
      responses:
        "200":
          description: Related lines
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVideoRelatedLinesResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Lines
  /client/v1/banners/{banner_id}:
    summary: Retrieve information of the banner
    get:
      summary: Retrieve information of the banner
      description: Retrieve information of the banner
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: banner_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Information of the banner
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Banner"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Banner not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Banners
  /client/v1/videos/{video_id}:
    summary: "Retrieve information for this video"
    get:
      summary: "Retrieve information for this video"
      description: "Retrieve information for this video"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Video information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/videos/{video_id}/bonuses/{bonus_id}:
    summary: "Retrieve information for this bonus belonging to one video"
    get:
      summary: "Retrieve information for this bonus belonging to one video"
      description: "Retrieve information for this bonus belonging to one video"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
        - name: bonus_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Bonus information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BonusDetail"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/meta/videos/{meta_id}:
    summary: "Retrieve information for this video by meta ID"
    get:
      summary: "Retrieve information for this video by meta ID"
      description: "Retrieve information for this video by meta ID"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: meta_id
          in: path
          schema:
            type: string
          required: true
        - name: meta_id_type
          in: query
          schema:
            description: Type for meta ID
            type: string
            example: "group_id"
            enum:
            - "title_id"
            - "group_id"
            - "asset_id"
      operationId: ""
      responses:
        "200":
          description: Video information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/videos/{video_id}/playback_options:
    summary: "Retrieve playable options for this video"
    get:
      summary: "Retrieve playable options for this video"
      description: "Retrieve playable options for this video"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Playable options
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackOptions"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/videos/{video_id}/lines:
    summary: "Retrieve related lines for this video"
    get:
      summary: "Retrieve related lines for this video"
      description: "Retrieve related lines for this video"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Related lines
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVideoRelatedLinesResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/series/{series_id}/recommend_episode:
    summary: Retrieve recommend episode of the specific series
    get:
      summary: Retrieve recommend episode of the specific series
      description: Retrieve recommend episode of the specific series
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: series_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Recommend episode in the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/meta/series/{series_meta_id}/recommend_episode:
    summary: Retrieve recommend episode of the specific series by series meta ID
    get:
      summary: Retrieve recommend episode of the specific series by series meta ID
      description: Retrieve recommend episode of the specific series by series meta ID
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: series_meta_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Recommend episode in the specific page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VideoDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/videos/{video_id}/purchase_plans:
    summary: "Retrieve purchase plans for this video"
    get:
      summary: "Retrieve purchase plans for this video"
      description: Retrieve purchase plans for this video
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Purchase plans information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPurchasePlansResp"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/packages/{package_id}:
    summary: Retrieve information for this package
    get:
      summary: Retrieve information for this package
      description: Retrieve information for this package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Package information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/meta/packages/{meta_id}:
    summary: Retrieve information for this package by meta ID
    get:
      summary: Retrieve information for this package by meta ID
      description: Retrieve information for this package by meta ID
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: meta_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Package information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/packages/{package_id}/purchase_button:
    summary: Retrieve purchase button for this package
    get:
      summary: Retrieve purchase button for this package
      description: Retrieve purchase button for this package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Purchase button information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageButton"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/packages/{package_id}/items:
    summary: Retrieve items of the package
    get:
      summary: Retrieve items of the package
      description: Retrieve items of the package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Items of the package
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageItems"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/unlimited_packages/{package_id}:
    summary: Retrieve information for this unlimited package
    get:
      summary: Retrieve information for this unlimited package
      description: Retrieve information for this unlimited package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Package information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/unlimited_packages/{package_id}/options:
    summary: Retrieve options of this unlimited package
    get:
      summary: Retrieve options of this unlimited package
      description: Retrieve options of this unlimited package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Option group of this unlimited package
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageOptions"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Collection not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/unlimited_packages/{package_id}/subscribe_button:
    summary: Retrieve subscribe button for this package
    get:
      summary: Retrieve subscribe button for this package
      description: Retrieve subscribe button for this package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: subscribe button information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageButton"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/unlimited_packages/{package_id}/items:
    summary: Retrieve items of the unlimited package
    get:
      summary: Retrieve items of the unlimited package
      description: Retrieve items of the unlimited package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
        - name: filters
          in: query
          schema:
            description: Combine multiple filters by the comma seperator
            type: string
            example: "ui-itemgroup-orderby-delivery-start-time"
      operationId: ""
      responses:
        "200":
          description: Items of the package
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageItems"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/channels:
    summary: Retrieve all channels
    get:
      summary: Retrieve all channels
      description: Retrieve all channels
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      operationId: ""
      responses:
        "200":
          description: Channel information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channels"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}:
    summary: Retrieve information of the channel
    get:
      summary: Retrieve information of the channel
      description: Retrieve information of the channel
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: channel_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Channel information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Channel not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}/programs:
    summary: Retrieve programs of the channel
    get:
      summary: Retrieve programs of the channel
      description: Retrieve programs of the channel
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: channel_id
          in: path
          schema:
            type: string
            example: "4"
          required: true
        - name: diff_day
          in: query
          schema:
            description: Filter programs by diff_day (0 means today, 1 means the next day, etc.)
            example: 0
            type: integer
      operationId: ""
      responses:
        "200":
          description: List of programs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Programs"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Channel not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}/upcoming_programs:
    summary: Retrieve upcoming programs of the channel
    get:
      summary: Retrieve upcoming programs of the channel
      description: Retrieve upcoming programs of the channel
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: channel_id
          in: path
          schema:
            type: string
            example: "4"
          required: true
        - name: exclude_program_id
          in: query
          schema:
            description: Excluded program id
            example: "156979"
            type: string
      operationId: ""
      responses:
        "200":
          description: List of programs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Programs"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Channel not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}/catchup/options:
    summary: Retrieve options of the channel catchup
    get:
      summary: Retrieve options of the channel catchup
      description: Retrieve options of the channel catchup
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: channel_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Option group of channel catchup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageOptions"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Channel not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}/catchup/subscribe_button:
    summary: Retrieve subscribe button for the channel catchup
    get:
      summary: Retrieve subscribe button for the channel catchup
      description: Retrieve subscribe button for the channel catchup
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: channel_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: subscribe button information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageButton"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Channel not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/channels/{channel_id}/catchup/items:
    summary: Retrieve items of the channel catchup
    get:
      summary: Retrieve items of the channel catchup
      description: Retrieve items of the channel catchup
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: channel_id
          in: path
          schema:
            type: string
          required: true
        - name: filters
          in: query
          schema:
            description: Combine multiple filters by the comma seperator
            type: string
            example: "ui-itemgroup-orderby-delivery-start-time"
      operationId: ""
      responses:
        "200":
          description: Items of the channel catchup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageItems"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Package not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Channel
  /client/v1/programs/{program_id}:
    summary: Retrieve detail information of the program
    get:
      summary: Retrieve detail information of the program
      description: Retrieve detail information of the program
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: program_id
          in: path
          schema:
            type: string
            example: "12522"
          required: true
      operationId: ""
      responses:
        "200":
          description: Detail information of the program
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Program not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Program
  /client/v1/meta/programs/{meta_id}:
    summary: Retrieve detail information of the program by meta ID
    get:
      summary: Retrieve detail information of the program by meta ID
      description: Retrieve detail information of the program by meta ID
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: meta_id
          in: path
          schema:
            type: string
            example: "12522"
          required: true
        - name: meta_id_type
          in: query
          schema:
            description: Type for meta ID
            type: string
            example: "program_id"
            enum:
            - "program_id"
            - "asset_id"
      operationId: ""
      responses:
        "200":
          description: Detail information of the program
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Program not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Program
  /client/v1/programs/{program_id}/items:
    summary: "[To be implemented] Retrieve related items of the program"
    get:
      summary: "[To be implemented] Retrieve related items of the program"
      description: "[To be implemented] Retrieve related items of the program"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: program_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Related items of the program
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgramRelatedItems"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Program not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Program
  # /client/v1/self_linear_programs/{self_linear_program_id}:
  #   summary: Retrieve detail information of the self linear program
  #   get:
  #     summary: Retrieve detail information of the self linear program
  #     description: Retrieve detail information of the self linear program
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - name: self_linear_program_id
  #         in: path
  #         schema:
  #           type: string
  #           example: "111_video_155281"
  #         description: Unique id for self linear program
  #         required: true
  #     operationId: ""
  #     responses:
  #       "200":
  #         description: Detail information of the program
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/SelfLinearProgramDetail"
  #       "400":
  #         description: Bad request error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
  #                 - $ref: "#/components/schemas/UserNeedLoginErrorResp"
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "403":
  #         description: Forbidden error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidIPErrorResp"
  #       "404":
  #         description: Resource not found error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - allOf:
  #                     - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
  #                     - properties:
  #                         message:
  #                           example: Program not found
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Program
  /client/v1/artists/{artist_id}:
    summary: Retrieve information for this artist
    get:
      summary: Retrieve information for this artist
      description: Retrieve information for this artist
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: artist_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Artist detail information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Artist not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Artists
  /client/v1/meta/artists/{meta_id}:
    summary: Retrieve information for this artist by meta ID
    get:
      summary: Retrieve information for this artist by meta ID
      description: Retrieve information for this artist by meta ID
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: meta_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Artist detail information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Artist not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Artists
  /client/v1/artists/{artist_id}/items:
    summary: Retrieve related items of the artist
    get:
      summary: Retrieve related items of the artist
      description: Retrieve related items of the artist
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: artist_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Related items of the artist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtistRelatedItems"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Artist not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Artists
  /client/v1/suggest:
    summary: Retrieve suggestions of the query
    get:
      summary: Retrieve suggestions of the query
      description: Retrieve suggestions of the query
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: q
          description: The query input of the suggestion
          in: query
          example: "attack"
          schema:
            type: string
          required: true
        - name: limit
          description: The limit of the number of suggestions
          in: query
          schema:
            type: integer
            format: int64
            default: 10
      operationId: ""
      responses:
        "200":
          description: Suggestions of the query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Suggestion"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Search
  /client/v1/search:
    summary: Retrieve search result of the query
    get:
      summary: Retrieve search result of the query
      description: Retrieve search result of the query
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: q
          description: The query input of the search
          in: query
          example: "attack"
          schema:
            type: string
          required: true
        - name: type
          description: Search type
          in: query
          schema:
            type: string
            enum:
              - "title"
              - "program"
              - "paid_live"
          required: true
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
      operationId: ""
      responses:
        "200":
          description: Search result of the query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Search not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Search
  /client/v1/search/options:
    summary: Retrieve options of search detail page
    get:
      summary: Retrieve options of search detail page
      description: Retrieve options of search detail page
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Option group of of search detail page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageOptions"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Search not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Search
  /client/v1/search/histories:
    summary: "Retrieve search histories of the query"
    get:
      summary: "Retrieve search histories of the query"
      description: "Retrieve search histories of the query"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: limit
          description: The limit of the number of search histories
          in: query
          schema:
            type: integer
            format: int64
            default: 10
      operationId: ""
      responses:
        "200":
          description: Search histories of the query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchHistories"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Search
  /client/v1/search/record_keyword:
    summary: "Record search keyword"
    post:
      summary: "Record search keyword"
      description: "Record search keyword"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                  description: The keyword to be recorded
                  example: "apple"
      responses:
        "200":
          description: Return 200 if search keyword is recorded successfully
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Search
  /client/v1/app_version:
    summary: Retrieve information for app verion
    get:
      summary: Retrieve information for app verion
      description: Retrieve information for app verion
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
      operationId: ""
      responses:
        "200":
          description: App version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppVersionResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: app version not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Misc
  /client/v1/notices:
    summary: Retrieve information of notices
    get:
      summary: Retrieve information of notices
      description: Retrieve information of notices
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Notices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notices"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        # "404":
        #   description: Resource not found error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - allOf:
        #               - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Misc
  /client/v1/splash_notices:
    summary: Retrieve information of pop up notices
    get:
      summary: Retrieve information of pop up notices
      description: Retrieve information of pop up notices
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Notices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notices"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        # "404":
        #   description: Resource not found error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - allOf:
        #               - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Misc
  /client/v1/eula:
    summary: Retrieve information of the eula
    get:
      summary: Retrieve information of the eula
      description: Retrieve information of the eula
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Eula
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Misc
  /client/v1/scta:
    summary: Retrieve information of the scta
    get:
      summary: Retrieve information of the scta
      description: Retrieve information of the scta
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Scta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Misc
  /client/v1/private_policy:
    summary: Retrieve information of the private policy
    get:
      summary: Retrieve information of the private policy
      description: Retrieve information of the private policy
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Private Policy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Misc
  /client/v1/personal_ad_policy:
    summary: Retrieve information of the personal AD policy
    get:
      summary: Retrieve information of the personal AD policy
      description: Retrieve information of the personal AD policy
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Personal AD policy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Misc
  /client/v1/mrss:
    summary: Retrieve MRSS feed, which stores AVOD meta data.
    get:
      summary: Retrieve MRSS feed, which stores AVOD meta data.
      description: Retrieve MRSS feed, which stores AVOD meta data.
      operationId: ""
      responses:
        "200":
          description: MRSS feed
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/MRSS"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - basicAuth: []
      tags:
        - Misc
  /client/v1/faq:
    summary: Retrieve frequently asked question (FAQ)
    get:
      summary: Retrieve frequently asked question (FAQ)
      description: Retrieve frequently asked question (FAQ)
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: FAQ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQTopics"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: faq not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Misc
  /client/v1/videos/{video_id}/favorite_status:
    summary: "Retrieve favorite status of this video"
    get:
      summary: "Retrieve favorite status of this video"
      description: Retrieve whether the favorite status of this video
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Return the status whether the video is set as favorite item or not
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                      - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
    put:
      summary: "Set the favorite status of this video"
      description: Set the favorite status of this video
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteStatus"
      responses:
        "200":
          description: Return the status whether the video is set as favorite item or not
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/artists/{artist_id}/favorite_status:
    summary: "Retrieve favorite status of this artist"
    get:
      summary: "Retrieve favorite status of this artist"
      description: Retrieve favorite status of this artistt
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: artist_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Return the status whether the artist is set as favorite item or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteStatus"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Artists
    put:
      summary: "Set the favorite status of this artist"
      description: "Set the favorite status of this artist"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: artist_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteStatus"
      responses:
        "200":
          description: Return the status whether the artist is set as favorite item or not
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                      - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Artists
  /client/v1/packages/{package_id}/favorite_status:
    summary: "Retrieve favorite status of this package"
    get:
      summary: "Retrieve favorite status of this package"
      description: Retrieve favorite status of this package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Return the status whether the package is set as favorite item or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteStatus"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
    put:
      summary: "Set the favorite status of this package"
      description: Set the favorite status of this package
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: package_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteStatus"
      responses:
        "200":
          description: Return the status whether the package is set as favorite item or not
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                      - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Packages
  /client/v1/programs/{program_id}/favorite_status:
    summary: "Retrieve favorite status of this program"
    get:
      summary: "Retrieve favorite status of this program"
      description: Retrieve whether the favorite status of this program
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: program_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Return the status whether the program is set as favorite item or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteStatus"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Program
    put:
      summary: "Set the favorite status of this program"
      description: Set the favorite status of this program
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: program_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteStatus"
      responses:
        "200":
          description: Return if the favorite status is set successfully
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Program
  # /client/v1/subaccount/favorite_artists:
  #   summary: "Retrieve account's favorite artists"
  #   get:
  #     summary: "Retrieve account's favorite artists"
  #     description: Retrieve account's favorite artists
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - $ref: "#/components/parameters/Page"
  #       - $ref: "#/components/parameters/PerPage"
  #       - name: filters
  #         in: query
  #         schema:
  #           description: Filters gotten from page options
  #           type: string
  #           example: "ui-itemgroup-orderby-alphabet"
  #     operationId: ""
  #     responses:
  #       "200":
  #         description: Account's favorite artists
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/Artists"
  #       "400":
  #         description: Bad request error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
  #                 - $ref: "#/components/schemas/UserNeedLoginErrorResp"
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "403":
  #         description: Forbidden error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidIPErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Account
  /client/v1/favorite_contents:
    summary: "Retrieve account's favorite contents"
    get:
      summary: "Retrieve account's favorite contents"
      description: "Retrieve account's favorite contents"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: filters
          in: query
          schema:
            description: Filters gotten from page options
            type: string
            example: "ui-itemgroup-orderby-alphabet"
        - name: sort
          in: query
          schema:
            description: Sort options. This value will replaces the sort setting in filters
            type: string
            example: "watched-time"
            enum:
              - "created-time"
              - "alphabet"
        - name: item_type
          in: query
          description: Default show all types, please use comma to concrete multiple types
          schema:
            example: "paid_live"
            enum:
              - "video"
              - "package"
              - "paid_live"
              - "program"
              - "artist"
      operationId: ""
      responses:
        "200":
          description: Account's favorite contents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFavoriteContentResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
    delete:
      summary: "Set multiple favorite contents as unfavorite"
      description: "Set multiple favorite contents as unfavorite"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: favorite_content_ids
          in: query
          schema:
            description: The favorite content IDs to be removed. Use comma to seperate IDs.
            example: "12,33,44"
      operationId: ""
      responses:
        "200":
          description: Return the favorite content IDs which are removed successfully
          content:
            application/json:
              schema:
                properties:
                  favorite_content_ids:
                    type: array
                    description: "The favorite content IDs to be removed"
                    items:
                      type: string
                      description: "Favorite content ID"
                      example: "111"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/watch_history:
    summary: "Retrieve watch history"
    get:
      summary: "Retrieve watch history"
      description: "Retrieve watch history"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: filters
          in: query
          schema:
            description: Filters gotten from page options
            type: string
            example: "ui-filter-sort-watched-time"
        - name: sort
          in: query
          schema:
            description: Sort options. This value will replaces the sort setting in filters
            type: string
            example: "watched-time"
            enum:
              - "watched-time"
              - "alphabet"
        - name: item_type
          in: query
          description: Default show all types, please use comma to concrete multiple types
          schema:
            example: "paid_live"
            enum:
              - "video"
              - "paid_live"
        - name: filter_rule
          description: "Filter rule options. This value will replaces the filter setting in filters<br>purchased-contents:セル/レンタル<br>playable-contents:無料/契約中作品"
          in: query
          schema:
            type: string
            example: "purchased-contents"
            enum:
              - "purchased-contents"
              - "playable-contents"
      operationId: ""
      responses:
        "200":
          description: Account's watch history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWatchHistoryResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
    delete:
      summary: "Remove multiple watch history by IDs"
      description: "Remove multiple watch history by IDs"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: watch_history_ids
          in: query
          schema:
            description: The watch history IDs to be removed. Use comma to seperate IDs.
            example: "12,33,44"
      operationId: ""
      responses:
        "200":
          description: Return the watch history IDs which are removed successfully
          content:
            application/json:
              schema:
                properties:
                  watch_history_ids:
                    type: array
                    description: "The watch history IDs to be removed"
                    items:
                      type: string
                      description: "Watch history ID"
                      example: "111"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/purchase_history:
    summary: "Retrieve account's purchase history"
    get:
      summary: "Retrieve account's purchase history"
      description: "Retrieve account's purchase history"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PerPage"
        - name: filters
          in: query
          schema:
            description: Filters gotten from page options
            type: string
            example: "ui-itemgroup-orderby-purchased-time"
        - name: sort
          in: query
          schema:
            description: Sort options. This value will replaces the sort setting in filters
            type: string
            example: "purchased-time"
            enum:
              - "purchased-time"
              - "alphabet"
        - name: item_type
          in: query
          description: Default show all types, please use comma to concrete multiple types
          schema:
            example: "paid_live"
            enum:
              - "video"
              - "package"
              - "paid_live"
      operationId: ""
      responses:
        "200":
          description: Account's purchase history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPurchasedContentsResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  # /client/v1/subaccount/bill/stats:
  #   get:
  #     summary: "Retrieve account's bill stats"
  #     description: Retrieve account's bill stats
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - name: filters
  #         in: query
  #         schema:
  #           description: Filters gotten from page options
  #           type: string
  #           example: "ui-filter-purchase-history-this-month"
  #     operationId: ""
  #     responses:
  #       "200":
  #         description: Account's bill
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/BillStats"
  #       "400":
  #         description: Bad request error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
  #                 - $ref: "#/components/schemas/UserNeedLoginErrorResp"
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "403":
  #         description: Forbidden error
  #         content:
  #           application/json:
  #            schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidIPErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Account
  # /client/v1/subaccount/bill/items:
  #   summary: "Retrieve account's bill"
  #   get:
  #     summary: "Retrieve account's bill"
  #     description: Retrieve account's bill
  #     parameters:
  #       - $ref: "#/components/parameters/X-Device-Type"
  #       - $ref: "#/components/parameters/X-Device-ID"
  #       - $ref: "#/components/parameters/Page"
  #       - $ref: "#/components/parameters/PerPage"
  #       - name: filters
  #         in: query
  #         schema:
  #           description: Filters gotten from page options
  #           type: string
  #           example: "ui-filter-purchase-history-this-month"
  #     operationId: ""
  #     responses:
  #       "200":
  #         description: Account's bill
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/BillItems"
  #       "400":
  #         description: Bad request error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
  #       "401":
  #         description: Authorization error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
  #                 - $ref: "#/components/schemas/UserNeedLoginErrorResp"
  #                 - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
  #       "403":
  #         description: Forbidden error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InvalidIPErrorResp"
  #       "500":
  #         description: Internal Server Error
  #         content:
  #           application/json:
  #             schema:
  #               anyOf:
  #                 - $ref: "#/components/schemas/InternalServerErrorResp"
  #     security:
  #       - x-authorization: []
  #     tags:
  #       - Account
  /client/v1/contract_info:
    summary: "Reset account's contract info"
    put:
      summary: "Reset account's contract info"
      description: "Reset account's contract info"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Successfully reset account's contract info
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/profile:
    summary: "Retrieve account's profile"
    get:
      summary: "Retrieve account's profile"
      description: "Retrieve account's profile"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Account's Profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountProfileResp"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        # "500":
        #   description: Internal Server Error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
    patch:
      summary: "Update account's profile"
      description: "Update account's profile"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountProfileReq"
      responses:
        "200":
          description: Return 200 if the account profile is updated successfully
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
                  - $ref: "#/components/schemas/InvalidPincodeTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/check_pincode:
    summary: "API for checking pincode"
    post:
      summary: "API for checking pincode"
      description: "API for checking pincode"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pincode:
                  type: string
                  description: "The input pincode which needs to be verified"
                  example: "0000"
      responses:
        "200":
          description: Return 200 if pincode is verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified_token:
                    type: string
                    description: "JWT token if the input pincode is verified successfully"
                    example: "UXZtUlZEQ3FFS2FSZGxxV1U2nIzW0xKUWxH2"
                  expire_at:
                    type: string
                    description: "Unix Timestamp which the token will be expired. (unit: seconds)"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
                  - $ref: "#/components/schemas/PincodeValidationErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/pincode:
    summary: "API for updating pincode"
    patch:
      summary: "API for updating pincode"
      description: "API for updating pincode"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePincodeReq"
      responses:
        "200":
          description: Return 200 if pincode is updated successfully
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
                  - $ref: "#/components/schemas/InvalidPincodeTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/avatars:
    summary: "Retrieve avatars"
    get:
      summary: "Retrieve avatars"
      description: "Retrieve avatars"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Account's Profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAvatarsResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Misc
  /client/v1/search/genres_moods:
    summary: "Retrieve genres and moods for Search"
    get:
      summary: "Retrieve genres and moods for Search"
      description: "Retrieve genres and moods for Search"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Genres and Moods for Search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGenresMoodsResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Genres and Moods
  /client/v1/coldstart/genres_moods:
    summary: "Retrieve genres and moods for Cold Start"
    get:
      summary: "Retrieve moods for Cold Start"
      description: "Retrieve moods for Cold Start"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      responses:
        "200":
          description: Genres and Moods for Cold Start
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGenresMoodsResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Genres and Moods
  /client/v1/auth/login:
    summary: "Redirect to J:COM login page"
    get:
      summary: "Redirect to J:COM login page"
      description: "Redirect to J:COM login page (if X-Device-Type is null, web will be default value)"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: u
          description: "The redirect URL after login process finished"
          example: "https://www.google.com"
          in: query
          schema:
            type: string
        - name: p
          description: "The query parameters which append to the redirect URL after login process finished"
          example: "redirect_url=https://www.googl.com"
          in: query
          schema:
            type: string
      operationId: ""
      responses:
        "302":
          description: Redirect to J:COM login page
      tags:
        - Auth
  /client/v1/auth/logout:
    summary: "Redirect to J:COM logout page"
    get:
      summary: "Redirect to J:COM logout page"
      description: "Redirect to J:COM logout page"
      parameters:
        - name: u
          description: "The redirect URL after logout process finished"
          example: "https://www.blabo.kkv-test.com/"
          in: query
          schema:
            type: string
      operationId: ""
      responses:
        "302":
          description: Redirect to J:COM logout page
      tags:
        - Auth
  /client/v1/auth/callback:
    summary: "Process the response from J:COM login page"
    get:
      summary: "Process the response from J:COM login page"
      description: "Process the response from J:COM login page"
      parameters:
        - name: state
          description: "State which contain the information from login API"
          example: "XXXXX"
          in: query
          schema:
            type: string
        - name: code
          description: "Generate from J:COM login page. The code is provided to getting access token from J:COM"
          example: "XXXX"
          in: query
          schema:
            type: string
        - name: error
          description: "Generate from J:COM login page if error occurs."
          example: "XXXXX"
          in: query
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "302":
          description: Redirect to redirect URL assembled from the query parameters from login
      tags:
        - Auth
  /client/v1/auth/logout_callback:
    summary: "Process the response from J:COM logout page"
    get:
      summary: "Process the response from J:COM logout page"
      description: "Process the response from J:COM logout page"
      parameters:
        - name: error
          description: "Generate from J:COM logout page if error occurs."
          example: "XXXXX"
          in: query
          schema:
            type: string
      operationId: ""
      responses:
        "302":
          description: Redirect to redirect URL or default client side url
      tags:
        - Auth
  /client/v1/auth/token:
    summary: "Exchange tokens pair with auth code"
    post:
      summary: "Exchange tokens pair with auth code"
      description: "Exchange access and refresh tokens with auth code from auth callback api. You should refresh(auth/refresh_token) the token pair with refresh token in half of expires_in time."
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: "Code from J:COM Web. You can retrieve this value from the redirection by auth/callback api. Auth callback api will pass this code in `code` parameter(in query) in redirect url."
                  example: "XXXXXXXX"
      responses:
        "200":
          description: Tokens pair for accessing Blabo system
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/PIDAccountNotInUseErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Auth
  /client/v1/auth/refresh_token:
    summary: "Refresh tokens pair with refresh token"
    post:
      summary: "Refresh tokens pair with refresh token"
      description: >-
        Use refresh_token to exchange new tokens pair.
        <br> You can exchange the new tokens pair with refresh_token even the original access_token is expired(but we still recommend you refresh it before expiration). Once you refresh the tokens pair, the previous tokens pair will be invalid directly.
        <br> You can consider the refresh token has long-term effective time, though Blabo system has not reveal the expiry time of refresh_token.
        It still will be invalid in any time for many reasons(expiry time, security issue and etc). If you encounter that, please go through login flow again.
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: "Token got from auth/token or auth/refresh_token api"
                  example: "XXXXXXXX"
      responses:
        "200":
          description: Tokens pair for accessing Blabo system
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidRefreshTokenErrorResp"
                  - $ref: "#/components/schemas/PIDAccountNotInUseErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      tags:
        - Auth
  /client/v1/auth/pid_path:
    summary: "Get PID system path for identidy verification"
    get:
      summary: "Get PID system path for identidy verification"
      description: "Get PID system path for identidy verification. If the api service can't identify the user email, errorCode=401 would be append to the redirect url"
      parameters:
        - name: u
          description: "The redirect URL after verification process finished"
          example: "https://www.blabo.kkv-test.com/"
          in: query
          schema:
            type: string
        - name: p
          description: "The query parameters which append to the redirect URL after verification process finished"
          example: "redirecturl/pincode"
          in: query
          schema:
            type: string
        - name: t
          description: "The query parameters which is access token if the header can't carry access token"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50X2lkIjoiNSIsInN1YmFjY291bnRfaWQiOiI0IiwiamNvbV9hY2Nlc3NfdG9rZW4iOiJyeDAwRm8yYUMzZW5XcEh6S0RLYkI2dENqNnZSUlNRSzlrQWJfYTl3c3VRIiwiamNvbV9yZWZyZXNoX3Rva2VuIjoiMVI1Y182MlFoWEdBWlU0ZjBvMlN0UzEtWmpMZFlrV0tGc29QM1VCUEJMYyIsImRldmljZV90eXBlIjoid2ViIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiIsImlzcyI6ImNsaWVudC1hcGktc2VydmljZSIsImV4cCI6MTY2MjAwMzMzNiwibmJmIjoxNjYxOTk5NzM2LCJpYXQiOjE2NjE5OTk3MzYsImp0aSI6ImM4NWJlYzlmLTFiZDQtNGZhOS05Y2NiLTBmMWFhMDE1OTBmZCJ9.c18UbBxcN9jK35sOBhtsnkUGDvkqRgdNLUEF-F74alc"
          in: query
          schema:
            type: string
      operationId: ""
      responses:
        "302":
          description: Redirect to the appointed page
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
      tags:
        - Auth
  /client/v1/subaccounts:
    summary: "Create subaccount"
    post:
      summary: "Create subaccount"
      description: "Create subaccount"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubAccountProfileReq"
      responses:
        "200":
          description: Token for accessing Blabo system
          content:
            application/json:
              schema:
                properties:
                  subaccount_id:
                    type: string
                    description: "The created subaccount ID"
                    example: "12"
                  token:
                    type: object
                    $ref: "#/components/schemas/TokenResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Account
  /client/v1/lives/{live_id}:
    summary: "Retrieve information for this live"
    get:
      summary: "Retrieve information for this live"
      description: "Retrieve information for this live"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: live_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Live information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Live not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Paid-live
  /client/v1/meta/lives/{meta_id}:
    summary: "Retrieve information for this live by meta id"
    get:
      summary: "Retrieve information for this live by meta id"
      description: "Retrieve information for this live by meta id"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: meta_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Live information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiveDetail"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Live not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Paid-live
  /client/v1/lives/{live_id}/favorite_status:
    summary: "Retrieve favorite status of this live"
    get:
      summary: "Retrieve favorite status of this live"
      description: "Retrieve whether the favorite status of this live"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: live_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: Return the status whether the live is set as favorite item or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FavoriteStatus"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Paid-live
    put:
      summary: "Set the favorite status of this live"
      description: "Set the favorite status of this live"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: live_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FavoriteStatus"
      responses:
        "200":
          description: Return the status whether the live is set as favorite item or not
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ReachFavoriteItemsCountResp"
                      - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Paid-live
  /client/v1/other_ott/{other_ott_item_id}:
    summary: "Retrieve information for this other OTT item"
    get:
      summary: "Retrieve information for this other OTT item"
      description: "Retrieve information for this other OTT item"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: other_ott_item_id
          in: path
          schema:
            type: string
          example: "1"
          required: true
      operationId: ""
      responses:
        "200":
          description: Other OTT item information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OtherOTTItem"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Other OTT
  /client/v1/videos/{video_id}/reviews:
    summary: "Retrieve filmarks reviews of this video"
    get:
      summary: "Retrieve filmarks reviews of this video"
      description: "Retrieve filmarks reviews of this video"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: video_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: "Retrieve filmarks reviews of this video"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFilmarksReviewsResp"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Video not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Contents
  /client/v1/series/{series_id}:
    summary: "Retrieve series by series id"
    get:
      summary: "Retrieve series by series id"
      description: "Retrieve series by series id"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: series_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: "Series Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Series is not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Series
  /client/v1/meta/series/{series_meta_id}:
    summary: "Retrieve series by series meta id"
    get:
      summary: "Retrieve series by series meta id"
      description: "Retrieve series by series meta id"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
        - name: series_meta_id
          in: path
          schema:
            type: string
          required: true
      operationId: ""
      responses:
        "200":
          description: "Series Info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"
        # "400":
        #   description: Bad request error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
        # "403":
        #   description: Forbidden error
        #   content:
        #     application/json:
        #       schema:
        #         anyOf:
        #           - $ref: "#/components/schemas/InvalidIPErrorResp"
        "404":
          description: Resource not found error
          content:
            application/json:
              schema:
                anyOf:
                  - allOf:
                      - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
                      - properties:
                          message:
                            example: Series is not found
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Series
  /client/v1/purchase:
    summary: Purchase
    post:
      summary: "API for purchase flow"
      description: "API for purchase flow"
      parameters:
        - $ref: "#/components/parameters/X-Device-Type"
        - $ref: "#/components/parameters/X-Device-ID"
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReq"
      responses:
        "200":
          description: Return 200 if purchase successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
                  - $ref: "#/components/schemas/WrongPriceFormatErrorResp"
                  - $ref: "#/components/schemas/NeedPincodeErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
                  - $ref: "#/components/schemas/UserNeedLoginErrorResp"
                  - $ref: "#/components/schemas/InvalidAccessTokenErrorResp"
                  - $ref: "#/components/schemas/InvalidPincodeTokenErrorResp"
                  - $ref: "#/components/schemas/PurchaseAreaRestricted"
                  - $ref: "#/components/schemas/PIDAccountNotInUseErrorForPurchaseResp"
        "403":
          description: Forbidden error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InvalidIPErrorResp"
                  # - $ref: "#/components/schemas/NotPurchasableErrorResp"
                  - $ref: "#/components/schemas/PurchaseMethodCheckingFailResp"
                  - $ref: "#/components/schemas/NotPurchasableResp"
        "404":
          description: Not Found error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "409":
          description: Conflict error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AlreadyBoughtErrorResp"
                  - $ref: "#/components/schemas/PriceNeedToUpdateErrorResp"
                  - $ref: "#/components/schemas/ReachedLoginConcurrentLimitErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Purchase
  /client/v1/purchase/amplitude:
    summary: Get purchase completed amplitude log
    get:
      summary: "API for getting purchase amplitude log"
      description: "API for getting purchase amplitude log"
      parameters:
        - name: transaction_id
          description: "transaction ID"
          in: query
          schema:
            type: string
            example: "a185b3f6-568a-47c5-a0b4-d49de1348dac"
      operationId: ""
      responses:
        "200":
          description: Return 200 if getting amplitude log successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseCompletedAmplitudeResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "404":
          description: Not Found error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Amplitude
  /client/v1/playback/amplitude:
    summary: Get playback event amplitude log
    get:
      summary: "API for playback event amplitude log"
      description: "API for playback event amplitude log"
      parameters:
        - name: playback_token
          description: "Playback token for start session response"
          in: query
          schema:
            type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        - name: item_id
          description: Streaming item id
          in: query
          required: true
          schema:
            type: string
        - name: item_type
          description: Streaming item type
          in: query
          required: true
          schema:
            enum:
            - videos
            - lives
            type: string
        - name: playback_type
          description: Playback type under playback streaming type. Refer to playback streaming type section.
          in: query
          required: true
          schema:
            enum:
            - mezzanine
            - bonus
            - trailer
            - ip_linear
            - self_linear
            - program
            - paid_live
            - paid_live_test
            type: string
      operationId: ""
      responses:
        "200":
          description: Return 200 if getting amplitude log successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackEventAmplitudeResp"
        "400":
          description: Bad request error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/GeneralBadRequestErrorResp"
        "401":
          description: Authorization error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/AuthorizationInvalidErrorResp"
        "404":
          description: Not Found error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ResourceNotFoundErrorResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Amplitude
  /client/v1/download/amplitude:
    summary: Get download event amplitude log
    get:
      summary: "API for download event amplitude log"
      description: "API for download event amplitude log"
      parameters:
        - name: download_item_id
          description: "Download item ID"
          in: query
          schema:
            type: string
            example: "176216"
      operationId: ""
      responses:
        "200":
          description: Return 200 if getting amplitude log successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadEventAmplitudeResp"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/InternalServerErrorResp"
      security:
        - x-authorization: []
      tags:
        - Amplitude
components:
  schemas:
    GetPageResp:
      type: object
      properties:
        id:
          description: page ID
          type: string
          example: "15382"
        namespace:
          description: Page name
          type: string
          example: "stb_new_home_feature"
        display_title:
          description: Display title of the page
          type: string
          example: "おすすめ・新作"
        mode:
          description: Page mode
          type: string
          enum:
            - "grid_view"
            - "filter_view"
            - "row_view"
            - "epg"
            - "watch_history"
            - "purchase_history"
            - "favorite_contents"
            - "favorite_artists"
            - "bill"
            - "faq"
          example: "row_view"
    GetNavigationPagesResp:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
    GetNavigationsResp:
      type: object
      properties:
        id:
          description: "ID for navigation"
          type: string
          example: 1
        namespace:
          description: "Namespace for navigation"
          type: string
          example: namespace
        navigation_items:
          description: "Items for navigation"
          type: array
          items:
            $ref: "#/components/schemas/GetPageLinesResp"
    GetPageLinesResp:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
        namespace:
          description: Page name
          type: string
          example: "stb_new_home_feature"
        display_title:
          description: Display title of the page
          type: string
          example: "おすすめ・新作"
        lines:
          description: The lines under the page
          type: array
          items:
            $ref: "#/components/schemas/LineInfo"
    GetVideoRelatedLinesResp:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
        lines:
          description: The related lines of the video
          type: array
          items:
            $ref: "#/components/schemas/LineInfo"
    GetFilmarksReviewsResp:
      type: object
      properties:
        filmarks_url:
          description: "Filmarks url of the video"
        reviews:
          description: "Filmarks review of the video, accroding to Filmarks API document, max record count is 10"
          type: array
          items:
            $ref: "#/components/schemas/FilmarksReview"
    FilmarksReview:
      type: object
      properties:
        user_name:
          description: User name of the review
          type: string
          example: "Kaztin"
        review:
          description: Review content
          type: string
          example: "Very good"
        score:
          description: User score of the review
          type: string
          example: "4.5"
        review_url:
          description: URL of the review
          type: string
          example: "http://filmarks.com/movies/10522/reviews/14982"
        created_at:
          description: Review created time from Filmarks
          type: string
          example: "1654447773"
    NavifationItem:
      type: object
      properties:
        id:
          description: "ID for navigation item"
          type: string
          example: 1
        display_text:
          description: "Display text for navigation item"
          type: string
          example: example text
        target_type:
          description: "Target type for navigation item"
          type: string
          example: target type
    LineInfo:
      type: object
      properties:
        id:
          description: Line ID
          type: string
          example: "206610"
        namespace:
          description: Line Name
          type: string
          example: "line-1580881369857"
        mode:
          description: Mode of the line, e.g major-banner, minor-banner, line, notice, continue-to-watch
          type: string
          example: "minor-banner"
        title:
          description: Display title of the line
          type: string
          example: "みんなが見ている人気作品はこちら！"
        option_groups:
          description: Filter criteria for a specific page
          nullable: true
          type: object
          items:
            $ref: "#/components/schemas/OptionGroups"
        filters:
          description: "The filter conditions to be used for query line items"
          type: string
          nullable: true
          example:
            - "ui-filter-search-sort-newest"
            - "ui-package-playable"
        next_page_id:
          description: "The Page ID for accesing next page"
          type: string
          nullable: true
    Items:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 2
        items:
          description: Items under a collection
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/ItemInfo"
              - $ref: "#/components/schemas/EmptyItemInfo"
    ItemInfo:
      type: object
      properties:
        item_id:
          description: Item ID
          type: string
          example: "1322976"
        item_type:
          description: Item type
          type: string
          enum:
            - "artist"
            - "banner"
            - "series"
            - "video"
            - "program"
            - "package"
            - "paid_live"
            - "other_ott"
            - "filler"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00226810
        title:
          description: Title of the item
          type: string
          example: 新解釈・三國志
        thumbnail:
          description: Thumbnail URL of the item
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1618462220/saku/cf7e7d182fbc84d2d1ff6512e187a888.jpg"
        rating:
          description: Rating for this item
          type: string
          example: "G"
          enum:
          - "G"
          - "PG-12"
          - "R-15"
          - "R-18"
        rating_value:
          description: Rating for this item and presented by integer
          type: integer
          example: 0
        playable:
          deprecated: true
          description: The item is playalbe or not if the item is a video
          type: boolean
        last_played_time:
          description: Last played time if the item is a video
          type: number
          format: double
          nullable: true
        duration:
          description: "If the item type is video, this field means the length of the media file (unit: seconds)"
          type: number
          format: integer
          example: 3600
          nullable: true
        channel_info:
          description: Channel info
          $ref: "#/components/schemas/ChannelInfo"
        video_info:
          description: Video info
          $ref: "#/components/schemas/VideoInfo"
          nullable: true
        series_info:
          description: Series info
          $ref: "#/components/schemas/SeriesInfo"
          nullable: true
        paid_live_info:
          description: Paid Live info
          $ref: "#/components/schemas/PaidLiveInfo"
          nullable: true
        artist_info:
          description: Artist info
          $ref: "#/components/schemas/ArtistInfoInItem"
          nullable: true
        playback_option:
          deprecated: true
          description: Playback option for the item
          $ref: "#/components/schemas/SimplePlaybackOptionDeprecated"
          nullable: true
    EmptyItemInfo:
      type: object
      properties:
        item_id:
          description: Item ID
          type: string
          example: ""
        item_type:
          description: Item type
          type: string
          example: ""
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ""
        title:
          description: Title of the item
          type: string
          example: "配信休止中"
        thumbnail:
          description: Thumbnail URL of the item
          type: string
          example: ""
        rating:
          description: Rating for this item
          type: string
          example: "G"
          enum:
          - "G"
          - "PG-12"
          - "R-15"
          - "R-18"
        rating_value:
          description: Rating for this item and presented by integer
          type: integer
          example: 0
        playable:
          deprecated: true
          description: The playable always false when item is emtpy
          type: boolean
          example: false
        last_played_time:
          description: The last played time always zero when item is emtpy
          type: number
          format: double
          nullable: true
        duration:
          description: "When item is empty, this field means the length of no video duration"
          type: number
          format: integer
          example: 3600
          nullable: true
        channel_info:
          description: Channel info
          $ref: "#/components/schemas/ChannelInfo"
          nullable: true
        playback_option:
          deprecated: true
          description: The playback option always null when item is emtpy
          example: null
          nullable: true
    ChannelInfo:
      type: object
      nullable: true
      properties:
        channel_title:
          description: Channel title
          type: string
          example: "GAORA SPORTS"
        channel_image:
          description: Channel image
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1618462220/saku/cf7e7d182fbc84d2d1ff6512e187a888.jpg"
        is_on_air:
          description: "Define this program is on-air or not"
          type: boolean
        is_exclusive:
          description: "Define this program is exclusive only or not"
          type: boolean
        start_time:
          description: "Program start time"
          type: string
          example: "1643943600"
        end_time:
          description: "Program end time"
          type: string
          example: "1643943600"
        playback_option:
          description: Playback option for the item
          $ref: "#/components/schemas/SimplePlaybackOption"
          nullable: true
    VideoInfo:
      type: object
      nullable: true
      properties:
        episode_info:
          $ref: "#/components/schemas/EpisodeInfo"
        is_exclusive:
          description: "Define this video is 独占 or not"
          type: boolean
        is_svod:
          description: "Define this video is メガパック or not"
          type: boolean
        is_avod:
          description: "Define this video is 無料 or not"
          type: boolean
        is_free:
          description: "Define this video is 無料 or not"
          type: boolean
        is_new_arrival:
          description: "Define this video is 新着 or not"
          type: boolean
        is_onsale:
          description: "Define this video is セールor not"
          type: boolean
    SeriesInfo:
      type: object
      nullable: true
      properties:
        is_exclusive:
          description: "Define this series is 独占 or not"
          type: boolean
        is_svod:
          description: "Define this series is メガパック or not"
          type: boolean
        is_avod:
          description: "Define this series is 無料 or not"
          type: boolean
        is_free:
          description: "Define this series is 無料 or not"
          type: boolean
        is_new_arrival:
          description: "Define this series is 新着 or not"
          type: boolean
        is_onsale:
          description: "Define this series is セール or not"
          type: boolean
    PaidLiveInfo:
      type: object
      nullable: true
      properties:
        is_on_air:
          description: "Define this paid live is ライブ or not"
          type: boolean
        is_exclusive:
          description: "Define this paid live is 独占 or not"
          type: boolean
        is_free:
          description: "Define this paid live is 無料 or not"
          type: boolean
        is_new_arrival:
          description: "Define this paid live is 新着 or not"
          type: boolean
        start_at:
          description: "Paid live start at (unix timestamp. Unit: seconds)"
          type: string
    ArtistInfoInItem:
      type: object
      nullable: true
      properties:
        role:
          description: "Describe the role for this artist in this item"
          type: string
          nullable: true
          example: "声優"
    VideoDetail:
      type: object
      properties:
        id:
          description: Video ID
          type: string
          example: "155281"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00036494
        title:
          description: Video title
          type: string
          example: 第1話 暴風竜ヴェルドラ
        type:
          description: Video type
          type: string
          example: episode
          enum:
            - "movie"
            - "episode"
        episode_info:
          $ref: "#/components/schemas/EpisodeInfo"
        synopsis:
          description: Brief description of the video
          type: string
          example: サラリーマン、三上悟は通り魔に刺されて死んだ。ところが意識が戻ると三上はなんとスライムへと転生していた！
        thumbnail:
          description: Thumbnail URL of the video
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        cover:
          description: Cover URL of the video
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        actors_description:
          description: Brief information about the actors in the video
          type: string
          example: 声の出演：岡咲美保（リムル）、豊口めぐみ（大賢者）
        actors:
          description: Detail information of the actors
          type: array
          items:
            $ref: "#/components/schemas/ArtistRole"
        creators_description:
          description: Brief information about the creators in the video
          type: string
          example: ""
        creators:
          description: Detail information of the creators
          type: array
          items:
            $ref: "#/components/schemas/ArtistRole"
        directors_description:
          description: Brief information about the directors in the video
          type: string
        directors:
          description: Detail information of the directors
          type: array
          items:
            $ref: "#/components/schemas/ArtistRole"
        is_favorite:
          description: Whether the subaccount added the video to his favorites
          type: boolean
        copyright:
          description: Copyright description
          type: string
          example: (C)川上泰樹・伏瀬・講談社／転スラ製作委員会
        trailer_option:
          nullable: true
          $ref: "#/components/schemas/SimplePlaybackOption"
        playback_options:
          description: The playback option of the video
          type: array
          items:
            $ref: "#/components/schemas/PlaybackOption"
        playable:
          description: The video is playalbe or not if the item is a video
          type: boolean
        studio:
          description: "Studio name"
          type: string
          nullable: true
        rating:
          description: "Rating of the banner"
          type: string
        recommend_id:
          description: "The ID from recommendation system which will be sent to Amplitude"
          type: string
          nullable: true
        duration:
          description: "The duration of this video"
          type: integer
          example: "3600"
        sales_plan_info:
          description: "the sales plan info"
          type: array
          items:
            $ref: "#/components/schemas/SalesPlanInfo"
        subdub_info:
          description: "the sub dub info"
          type: array
          items:
            $ref: "#/components/schemas/SubDubInfo"
        dolby_audio_info:
          description: "the Dolby info"
          nullable: true
          type: array
          items:
            type: string
            example: "Atmos"
        hdr_info:
          description: "the HDR info"
          nullable: true
          type: array
          items:
            type: string
            example: "HDR10"
        adward_info:
          description: "the adward info"
          nullable: true
          type: array
          items:
            type: string
            example: "Adward"
        legend_info:
          description: "the legend info"
          nullable: true
          type: array
          items:
            type: string
            example: "Legend"
        is_new_arrival:
          description: "define this content is onsale or not"
          type: boolean
        is_onsale:
          description: "define this content is onsale or not, using for tag セール"
          type: boolean
        is_exclusive:
          description: "define this content is exclusive only or not, using for tag 独佔"
          type: boolean
        first_release_year:
          description: "Year of content released"
          type: integer
          example: 2022
          nullable: true
        release_country_date:
          description: "The publish date of the video"
          type: string
          example: "2022-09-10"
          nullable: true
        filmarks_info:
          nullable: true
          $ref: "#/components/schemas/FilmarksInfo"
        is_svod:
          type: boolean
          description: "Is the content for SVOD, using for tag 見放題（unlimted viewing rigihts)"
          example: false
        is_avod:
          type: boolean
          description: "Is the content for AVOD, using for tag 広告付き無料（AVOD license)"
          example: false
        is_free:
          type: boolean
          description: "Is the content free, using for tag 無料"
          example: false
        svod_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        tvod_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        dod_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        est_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        fvod_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        avod_display_duration:
          nullable: true
          $ref: "#/components/schemas/DisplayDuration"
        est_plan_info:
          nullable: true
          $ref: "#/components/schemas/PurchasePlanInfo"
        rental_plan_info:
          nullable: true
          $ref: "#/components/schemas/PurchasePlanInfo"
        subscribe_plan_info:
          nullable: true
          $ref: "#/components/schemas/PurchasePlanInfo"
        tvod_rental_status:
          nullable: true
          $ref: "#/components/schemas/TVODRentalStatus"
        android_tv_app_url:
          description: URL of AndroidTV app, will be decrepted, please use the android_tv_app_url in url_info
          type: string
          example: "https://play.google.com/store/apps/details?id=com.gameloft.android.ANMP.GloftA8HM&hl=ja&gl=US"
        youtube_web_url:
          description: URL of Youtbute (web), will be decrepted, please use the youtube_web_url in url_info
          type: string
          example: "https://www.youtube.com/watch?v=KLEX8T8c9QI"
        country_of_origin:
          description: "the country of origin"
          nullable: true
          type: array
          items:
            type: string
            example: "jp"
        url_info:
          $ref: "#/components/schemas/UrlInfo"
          nullable: true
    BonusDetail:
      type: object
      properties:
        id:
          description: Bonus ID
          type: string
          example: "155281"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: "1000842658"
        title:
          description: Bonus title
          type: string
          example: 第1話 暴風竜ヴェルドラ
        description:
          description: "Description for this bonus"
          type: string
        thumbnail:
          description: Thumbnail URL of the bonus
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        available_versions:
          description: The available versions for this bonus belonging to this video
          type: array
          items:
            type: string
          example:
          - "セル（購入）HD版"
        playback_option:
          description: The playback option of the video
          nullable: true
          $ref: "#/components/schemas/SimplePlaybackOption"
    PurchasePlanInfo:
      description: "Purchase plan info for each purchase type"
      type: object
      nullable: true
      properties:
        aggregate_plan_info:
          description: "Plan info displayed on the purchase button, aggregate avaliable purchase plans and get the best price to display"
          type: object
          items:
            $ref: "#/components/schemas/AggregatePlanInfo"
        subdub_plans:
          description: "Purchase plans group by subdub"
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PurchasePlan"
        dubbed_plans:
          description: "Purchase plans group by dubbed"
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PurchasePlan"
        subtitle_plans:
          description: "Purchase plans group by subtitle"
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PurchasePlan"
        original_plans:
          description: "Purchase plans group by original"
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PurchasePlan"
    AggregatePlanInfo:
      type: object
      properties:
        discount:
          description: "Discount price"
          type: integer
          example: 200
        price_with_tax:
          description: "Price with tax"
          type: integer
          example: 200
        purchasable:
          description: "To determine the purchase button can be clicked"
          type: boolean
          example: false
    DisplayDuration:
      type: object
      nullable: true
      properties:
        start_at:
          description: "Display start time (配信開始), Show when not started yet (license startTime), Show when no license between startTime ~ endTime, When multiple license, show earliest startTime > Now among all licenses"
          type: string
          example: "1685458799"
        end_at:
          description: "Display end time (配信終了), if a content has same and multiple valid license, pick up the most far date"
          type: string
          example: "1685458799"
    FilmarksInfo:
      type: object
      nullable: true
      properties:
        filmarks_id:
          description: Filmarks id
          type: string
          example: "155281"
        filmarks_genre:
          description: Filmarks genre
          type: string
          example: "movies"
          enum:
            - movies
            - dramas
            - animes
        score:
          description: Filmark score
          type: string
          example: "4.5"
        total_number_of_reviews:
          description: Total number of reviews
          type: integer
          example: 100
        filmarks_url:
          description: Link URL to Filmarks content page
          type: string
          example: http://filmarks.com/movies/155281
    LiveDetail:
      type: object
      properties:
        id:
          description: Live ID
          type: string
          example: "155281"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: 00036494
        type:
          description: Type of the content
          type: string
          example: paid_live
        title:
          description: live title
          type: string
          example: Space shower TV
        synopsis:
          description: Brief description of the live
          type: string
          example: サラリーマン、三上悟は通り魔に刺されて死んだ。ところが意識が戻ると三上はなんとスライムへと転生していた！
        thumbnail:
          description: Thumbnail URL of the live
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        cover:
          description: Cover URL of the live
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        actors_description:
          description: Brief information about the actors in the live
          type: string
          example: 声の出演：岡咲美保（リムル）、豊口めぐみ（大賢者）
        actors:
          description: Detail information of the actors
          type: array
          items:
            $ref: "#/components/schemas/ArtistRole"
        display_start_at:
          description: Display start time on UI
          type: string
          example: "1643943600"
        display_end_at:
          description: Display end time on UI
          type: string
          example: "1643943600"
        start_at:
          description: live start time
          type: string
          example: "1643943600"
        end_at:
          description: live end time
          type: string
          example: "1643943600"
        event_start_at:
          description: Event start time
          type: string
          example: "1643943600"
        vod_start_at:
          description: VOD start time
          type: string
          example: "1643943600"
          nullable: true
        vod_end_at:
          description: VOD start time
          type: string
          example: "1643943600"
          nullable: true
        is_capture:
          description: Whether the live needs catch up
          type: boolean
          example: true
        is_start_over:
          description: Whether the live needs start over
          type: boolean
          example: true
        is_chatting:
          description: Whether the live event support chatting
          type: boolean
          example: false
        is_social_tipping:
          description: Whether the live event support social tipping
          type: boolean
          example: false
        is_favorite:
          description: Whether the subaccount added the live to his favorites
          type: boolean
        is_exclusive:
          description: "Define this content is exclusive only or not (独占)"
          type: boolean
        is_free:
          type: boolean
          description: "Is the content free, using for tag (無料)"
        is_new_arrival:
          type: boolean
          description: "Is the live new arrival, using for tag (NEW)"
        is_on_air:
          type: boolean
          description: "Is in live, using for tag (ライブ)"
        live:
          type: boolean
          description: "Is in live, using for tag (ライブ)"
        status:
          type: string
          description: "live status"
          enum:
          - "Unknown"
          - "NotStart"
          - "Ongoing"
          - "Catchup"
          - "Expired"
          - "Encoding"
          - "Canceled"
          - "Suspended"
        state:
          deprecated: true
          type: string
          description: "Will be decrepted, please use status field"
          enum:
          - "Unknown"
          - "NotStart"
          - "Ongoing"
          - "Catchup"
          - "Expired"
          - "Encoding"
          - "Canceled"
          - "Suspended"
        broadcast_plan:
          description: The broadcast plan for this live event.
          type: string
          enum:
            - "SMALL"
            - "MASSIVE"
          nullable: true
        precautions:
          description: The precautions for this live event.
          type: string
          nullable: true
        concurrent_limit:
          type: integer
          description: Maximum number for concurrent playback users under one PID user
          example: 1
        playback_options:
          description: The playback option of the live
          type: array
          items:
            $ref: "#/components/schemas/LivePlaybackOption"
          nullable: true
        trailer_option:
          nullable: true
          $ref: "#/components/schemas/SimplePlaybackOption"
        rating:
          description: "Rating of this live"
          type: string
        rating_value:
          description: Rating for this item and presented by integer
          type: integer
          example: 0
        location:
          description: "The location of the live event"
          type: string
          example: "日本武道館"
          nullable: true
        copyright:
          description: Copyright description
          type: string
          example: (C)川上泰樹・伏瀬・講談社／転スラ製作委員会
          nullable: true
        url_info:
          $ref: "#/components/schemas/UrlInfo"
          nullable: true
        purchase_plan_info:
          $ref: "#/components/schemas/PaidLivePurchasePlanInfo"
    UrlInfo:
      type: object
      properties:
        url:
          description: "URL"
          type: string
          nullable: true
        url_text:
          description: "URL text"
          type: string
          nullable: true
        ios_app_url:
          description: "IOS app url"
          type: string
          nullable: true
        android_app_url:
          description: "Android app url"
          type: string
          nullable: true
        android_tv_app_url:
          description: "Android TV app url"
          type: string
          nullable: true
        app_text:
          description: "App text"
          type: string
          nullable: true
        youtube_web_url:
          description: "Youtube web url"
          type: string
          nullable: true
        youtube_ios_app_url:
          description: "Youtube ios app url"
          type: string
          nullable: true
        youtube_android_app_url:
          description: "Youtube android app url"
          type: string
          nullable: true
    OptionGroups:
      type: object
      properties:
        id:
          description: Option group ID
          type: string
          example: 49838
        groups:
          type: array
          items:
            $ref: "#/components/schemas/OptionInfo"
    OptionInfo:
      type: object
      properties:
        id:
          description: Option group ID
          type: string
          example: 49838
        title:
          description: Title of the option group
          type: string
          example: ジャンルを絞り込む ▼
        options:
          type: array
          items:
            $ref: "#/components/schemas/OptionOptionInfo"
    OptionOptionInfo:
      type: object
      properties:
        id:
          description: Option ID
          type: string
          example: 749905
        title:
          description: Title of filter criteria
          type: string
          example: おすすめ
        is_selected:
          description: Default selection of filter criteria
          type: boolean
        mode:
          description: row_view - Request getting page lines API, filter - append to the filters when requesting getting line items API, options - request getting sub-option API
          type: string
          example: filter
        filters:
          description: The filter conditions to be used for query line after selecting the option item
          type: array
          items:
            type: string
          example:
            - ui-package-playable
    ArtistRole:
      type: object
      properties:
        role:
          description: The position or responsibility of the artist
          type: string
          example: アニメーション制作
        artists:
          description: Artist detail information under the role
          type: array
          items:
            $ref: "#/components/schemas/ArtistInfo"
    ArtistInfo:
      type: object
      properties:
        id:
          description: Artist ID
          type: string
          example: "592201"
        name:
          description: Artist name
          type: string
          example: エイトビット
        is_favorite:
          description: Whether the subaccount added the artist to his favorites
          type: boolean
    ArtistDetail:
      type: object
      properties:
        id:
          description: Artist ID
          type: string
          example: "592201"
        bio:
          description: Biography of the artist
          type: string
        birthday:
          type: string
          example: "1932年6月4日"
        blood_type:
          type: string
        is_favorite:
          description: Whether the subaccount added the artist to his favorites
          type: boolean
        hometown:
          type: string
        image_url:
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        name:
          description: Artist name
          type: string
          example: エイトビット
        occupation:
          type: string
          example: "役者・俳優"
        sign:
          type: string
          example: "ふたご座"
    ArtistRelatedItems:
      type: object
      properties:
        title:
          type: string
          example: "出演・関連作品"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 1
        items:
          description: Related items of the artist
          type: array
          items:
            $ref: "#/components/schemas/ItemInfo"
    Artists:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 1
        artists:
          description: List of artists
          type: array
          items:
            $ref: "#/components/schemas/ArtistDetail"
    PlaybackOptions:
      type: object
      description: Options for playback api
      properties:
        options:
          type: array
          items:
            $ref: "#/components/schemas/PlaybackOption"
    PlaybackOption:
      type: object
      properties:
        item_id:
          description: Item ID for playback API
          type: string
          example: "156868"
        item_type:
          description: Item type for playback API
          type: string
          example: "videos"
        playback_type:
          description: playback type for playback API
          type: string
          example: "mezzanine"
        license_id:
          description: License ID for playback API
          type: string
          example: "33151"
        name:
          description: Item name
          type: string
          example: HD版
        subdub:
          description: "Subtitle and dubbing, 0: dubbing only, 1: subtitle only, 2: no subtitle and dubbing, 3: account can swich the video with subtitle or the video with dubbing in player"
          type: string
          enum:
            - "0"
            - "1"
            - "2"
            - "3"
        playable_platforms:
          description: The platforms which the video can be played
          type: array
          items:
            type: string
          example:
            - iOS
            - Android
        until:
          description: The ending timestamp which the video is authorized to play
          type: string
          nullable: true
          example: "1629970459"
    LivePlaybackOption:
      type: object
      properties:
        item_id:
          description: Item ID for playback API
          type: string
          example: "156868"
        item_type:
          description: Item type for playback API
          type: string
          example: "lives"
        playback_type:
          description: playback type for playback API
          type: string
          example: "paid_live"
        license_id:
          description: License ID for playback API
          type: string
          example: "33151"
        name:
          description: Item name
          type: string
          example: HD版
        playable_platforms:
          description: The platforms which the live can be played
          type: array
          items:
            type: string
          example:
            - iOS
            - Android
        until:
          description: The ending timestamp which the live is authorized to play
          type: string
          nullable: true
          example: "1629970459"
    SimplePlaybackOption:
      type: object
      nullable: true
      properties:
        item_id:
          description: Item ID for playback API
          type: string
          example: "4"
        item_type:
          description: Item type for playback API
          type: string
          example: "lives"
        playback_type:
          type: string
          example: "ip_linear"
    SimplePlaybackOptionDeprecated:
      type: object
      deprecated: true
      nullable: true
      properties:
        item_id:
          description: Item ID for playback API
          type: string
          example: "4"
        item_type:
          description: Item type for playback API
          type: string
          example: "lives"
        playback_type:
          type: string
          example: "ip_linear"
    Banner:
      type: object
      properties:
        id:
          description: Banner ID
          type: string
          example: "3338473"
        image_url:
          description: Image URL of the banner
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        display_start_at:
          description: Display start time of the banner
          type: string
          example: "1643943600"
        title:
          description: Title of the banner
          type: string
          example: "TOP_【特集】「宇宙戦艦ヤマト2205　新たなる旅立ち」後章 - STASHA -"
        link_url:
          description: Link url of the banner
          type: string
          example: "blabovod://collection/688349"
        rating:
          description: Rating of the banner
          type: string
          example: "G"
    OtherOTTItem:
      type: object
      properties:
        id:
          description: Other OTT Item ID
          type: string
          example: "3338473"
        title:
          description: Title of the other OTT item
          type: string
          example: "TOP_【特集】「宇宙戦艦ヤマト2205　新たなる旅立ち」後章 - STASHA -"
        description:
          description: Title of the other OTT item
          type: string
          example: "TOP_【特集】「宇宙戦艦ヤマト2205　新たなる旅立ち」後章 - STASHA -"
        ott_type:
          description: Type of the other OTT item
          type: string
          example: "Netflix"
        image_url:
          description: Image URL of the other OTT item
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        start_at:
          description: Start time of the other OTT item
          type: string
          example: "1643943600"
        end_at:
          description: End time of the other OTT item
          type: string
          example: "1643943600"
        link_url:
          description: Link url of the other OTT item
          type: string
          example: "blabovod://collection/688349"
    GetPageOptionsResp:
      type: object
      properties:
        id:
          description: Page option group ID
          type: string
          example: "49837"
        groups:
          description: Option groups
          type: array
          items:
            $ref: "#/components/schemas/OptionGroup"
    OptionGroup:
      type: object
      properties:
        id:
          description: Option group ID
          type: string
          example: "211"
        title:
          description: Title of the option group
          type: string
          example: "ジャンルを絞り込む ▼"
        options:
          description: Options in the option group
          type: array
          items:
            $ref: "#/components/schemas/Option"
    Option:
      type: object
      properties:
        id:
          description: Option ID
          type: string
          example: "749906"
        title:
          description: Title of the option
          type: string
          example: "すべて"
        filters:
          description: The filters which need to be passed when query the line items
          type: array
          items:
            type: string
          example:
            - "ui-genre-orig-id-or-J1"
            - "ui-itemgroup-auto"
        mode:
          description: e.g row_view and filter, row_view means that the next step is to request getting line api, and the filter means that the filters in the option need to be pass when requesting getting line api
          type: string
          example: "filter"
        is_selected:
          description: The default option of the option group
          type: boolean
          example: "false"
    GetPageItemsResp:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
        items:
          description: The items under the page
          type: array
          items:
            $ref: "#/components/schemas/ItemInfo"
    Package:
      type: object
      properties:
        id:
          description: Package ID
          type: string
          example: "48438"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: "1404716"
        meta_type:
          description: Type of the package
          type: string
          example: "GOD"
        display_title:
          description: Display title of the package
          type: string
          example: イタズラなKiss　全話パック
        description:
          description: Description of the package
          type: string
          example: "『イタズラなKiss』をお得なパック料金でご覧ください"
        price:
          description: Price of the package
          type: number
          format: float
          example: 4400
        discount:
          description: Discount price (if any)
          type: number
          format: float
          nullable: true
          example: 4000
        image_url:
          description: Image URL of the package
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        is_favorite:
          description: Whether the subaccount added the package to his favorites
          type: boolean
        purchase_status:
          $ref: "#/components/schemas/PurchaseStatus"
        is_onsale:
          description: "define this content is onsale or not"
          type: boolean
        rating:
          description: Rating of the package
          type: string
          example: "G"
        start_at:
          description: Start time of the package
          type: integer
        end_at:
          description: End time of the package
          type: integer
        state:
          description: State of the package
          type: string
          enum:
            - "comingsoon"
            - "notpurchasable"
            - "purchasable"
            - "purchased"
            - "unknown"
        unlimited_play_duration:
          description: The rental duration if purchasing this package
          type: integer
          nullable: true
          example: 2592000
        rental_status:
          description: Rental status
          type: object
          $ref: "#/components/schemas/RentalStatus"
        is_purchased_content_included:
          description: "Describe that is there any content under this GOD is purchased"
          type: boolean
          example: true
    PackageButton:
      type: object
      properties:
        id:
          description: Package ID
          type: string
          example: "48438"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: "1404716"
        meta_package_type:
          description: Type of the package
          type: string
          example: "GOD"
        price:
          description: Price of the package
          type: number
          format: float
          example: 4400
        discount:
          description: Discount price (if any)
          type: number
          format: float
          nullable: true
          example: 4000
        description:
          description: Description of the package
          type: string
          example: "『イタズラなKiss』をお得なパック料金でご覧ください"
        is_purchased:
          description: Whether this package is purchased
          type: boolean
        state:
          description: State of the package
          type: string
          enum:
            - "comingsoon"
            - "notpurchasable"
            - "purchasable"
            - "purchased"
            - "unknown"
        stb_package:
          type: string
        stb_activity:
          type: string
        display_text:
          type: string
    PackageItems:
      type: object
      properties:
        title:
          type: string
          example: "お得パック"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 1
        items:
          description: Related items of the artist
          type: array
          items:
            $ref: "#/components/schemas/ItemInfo"
    PackageOptions:
      type: object
      properties:
        id:
          description: Package option group ID
          type: string
          example: "37"
        groups:
          description: Option groups
          type: array
          items:
            $ref: "#/components/schemas/OptionGroup"
    Channel:
      type: object
      properties:
        id:
          description: Channel id
          type: string
          example: "1379"
        meta_channel_id:
          description: Meta ID of channel
          type: string
          example: "LIVECH11SVOD.com"
        type:
          description: Type of the channel
          type: string
          enum:
            - ip_linear
            - self_linear_handpick
            - self_linear_recommend
        title:
          description: Title of the channel
          type: string
          example: "AXN HD 海外ドラマ"
        image_url:
          description: Image URL of the package
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        contract_code:
          description: Contract code of the channel. 00 means free channel. 01 means paid channel.
          type: string
          example: "00"
        playable:
          description: Whether this channel is playable
          type: boolean
        playback_option:
          description: Playback option for the channel
          nullable: true
          $ref: "#/components/schemas/SimplePlaybackOption"
    Channels:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
        channels:
          type: array
          items:
            $ref: "#/components/schemas/Channel"
    Program:
      type: object
      properties:
        id:
          description: Program id
          type: string
          example: "156967"
        meta_program_id:
          description: Meta ID of program
          example: "202007JSPO87063L"
        image_url:
          description: Image URL of the package
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        title:
          description: Title of the channel
          type: string
          example: "AXN HD 海外ドラマ"
        on_air:
          description: Whether this program is on air
          type: boolean
        start_at:
          description: Start time of the program
          type: integer
        end_at:
          description: End time of the program
          type: integer
    Programs:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
        programs:
          type: array
          items:
            $ref: "#/components/schemas/Program"
    ProgramDetail:
      type: object
      properties:
        id:
          description: Program id
          type: string
          example: "156967"
        meta_program_id:
          description: Meta ID of program
          example: "202007JSPO87063L"
        image_url:
          description: Image URL of the package
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        title:
          description: Title of the channel
          type: string
          example: "AXN HD 海外ドラマ"
        is_on_air:
          description: Whether this program is on air
          type: boolean
        start_at:
          description: Start time of the program
          type: string
          example: "1642723200"
        end_at:
          description: End time of the program
          type: string
          example: "1642726800"
        channel:
          description: Channel of the program
          $ref: "#/components/schemas/Channel"
        actors:
          description: Actors of the program
          type: array
          items:
            type: string
            example: "有野 晋哉"
        actors_description:
          description: Brief information about the actors in the program
          type: string
          example: 出演：スン・イー、チャン・ルオユン、ダン・ルン
        can_record:
          description: Whether this program can be recorded
          type: boolean
        is_capture:
          description: The program has capture
          type: boolean
        duration:
          description: Duration of the program
          type: integer
          example: 3600
          nullable: true
        hiroshima:
          description: Whether this program is from hiroshima
          type: boolean
        synopsis:
          description: Synopsis of the program
          type: string
        signal:
          description: Signal of the program
          type: string
          nullable: true
        is_start_over:
          description: The program can start over
          type: boolean
        is_favorite:
          description: Whether the subaccount added the program to his favorites
          type: boolean
        subscribe_url:
          description: Subscribe URL of the program
          type: string
        playback_option:
          description: Playback option of the program
          $ref: "#/components/schemas/SimplePlaybackOption"
          nullable: true
        rating:
          description: Rating of the program
          type: string
          example: "G"
        catchup_info:
          description: Catchup info of the program
          type: object
          nullable: true
          properties:
            item_id:
              description: Item ID, when catchup is unable, id will be empty
              type: string
              example: "1404716"
            item_type:
              description: Item type, when catchup is unable, type will be empty
              type: string
              enum:
                - "video"
    ProgramRelatedItems:
      type: object
      properties:
        title:
          type: string
          example: "この作品に興味があるあなたへ"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 1
        items:
          description: Related items of the program
          type: array
          items:
            $ref: "#/components/schemas/ItemInfo"
    SelfLinearProgramDetail:
      type: object
      properties:
        id:
          description: Self linear Program id (of the form {id}\_{item_type}\_{item_id})
          type: string
          example: "156967"
        video_id:
          description: Video ID of the self linear program
          type: string
          example: 155281
        image_url:
          description: Image URL of the package
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        title:
          description: Title of the channel
          type: string
          example: "AXN HD 海外ドラマ"
        on_air:
          description: Whether this program is on air
          type: boolean
        start_at:
          description: Start time of the program
          type: string
          example: "1642723200"
        end_at:
          description: End time of the program
          type: string
          example: "1642726800"
        channel:
          description: Channel of the program
          $ref: "#/components/schemas/Channel"
        duration:
          description: Duration of the program
          type: integer
          example: 3600
          nullable: true
        synopsis:
          description: Synopsis of the program
          type: string
        playback_options:
          description: Playback options of the program
          $ref: "#/components/schemas/SimplePlaybackOption"
          nullable: true
    GeneralBadRequestErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4000001"
          example: "4000001"
        message:
          type: string
          example: Unknown Bad Request
    WrongPriceFormatErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4000002"
          example: "4000002"
        message:
          type: string
          example: Error in purchase price format
    NeedPincodeErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4000101"
          example: "4000101"
        message:
          type: string
          example: Need pincode
    AuthorizationInvalidErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4010001"
          example: "4010001"
        message:
          type: string
          example: Authorization invalid error
    UserNeedLoginErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4010002"
          example: "4010002"
        message:
          type: string
          example: User need login
    JCOMAuthorizationErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4010003"
          example: "4010003"
        message:
          type: string
          example: J:COM Authorization error
    JCOMProfileValidationErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4010004"
          example: "4010004"
        message:
          type: string
          example: J:COM Profile Validation error
    PincodeValidationErrorResp:
      type: object
      description: The pincode is wrong.
      properties:
        error_code:
          type: string
          enum:
            - "4010101"
          example: "4010101"
        message:
          type: string
          example: Wrong Pincode
    InvalidPincodeTokenErrorResp:
      type: object
      description: >-
        Client provided the pincode token, but it is invalid(may be expired, illegal or revoked). Please get pincode token again.
      properties:
        error_code:
          type: string
          enum:
            - "4010102"
          example: "4010102"
        message:
          type: string
          example: Verify pincode token failed
    InvalidAccessTokenErrorResp:
      type: object
      description: >-
        The access token is specified in auth header, but it is invalid. May be expired, illegal or revoked.
        <br> Please consider use refresh token api to get new tokens pair or go through login flow again.
      properties:
        error_code:
          type: string
          enum:
            - "4010103"
          example: "4010103"
        message:
          type: string
          example: Invalid access token
    InvalidRefreshTokenErrorResp:
      type: object
      description: >-
        The refresh token is invalid, may be expired, illegal or revoked. Client can only get new tokens pair by going through login flow in this situation.
      properties:
        error_code:
          type: string
          enum:
            - "4010104"
          example: "4010104"
        message:
          type: string
          example: Invalid refresh token
    PIDAccountNotInUseErrorResp:
      type: object
      description: >-
        The service code of user pbillprofile is not in use.
      properties:
        error_code:
          type: string
          enum:
            - "4010106"
          example: "4010106"
        message:
          type: string
          example: PID account service status is not in use
    PIDAccountNotInUseErrorForPurchaseResp:
      type: object
      description: >-
        The service code of user pbillprofile is not in use.
      properties:
        error_code:
          type: string
          enum:
            - "4010108"
          example: "4010108"
        message:
          type: string
          example: PID account service status is not in use
    PurchaseAreaRestricted:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4010008"
          example: "4010008"
        message:
          type: string
          example: The video is not purchasable outside Japan
    InvalidIPErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4030013"
          example: "4030013"
        message:
          type: string
          example: Invalid IP
    NotPurchasableErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4030101"
          example: "4030101"
        message:
          type: string
          example: Cannot purchase
    PurchaseMethodCheckingFailResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4030103"
          example: "4030103"
        message:
          type: string
          example: Purchase method checking failed
    NotPurchasableResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4030104"
          example: "4030104"
        message:
          type: string
          example: Cannot purchase
    ResourceNotFoundErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4040001"
          example: "4040001"
        message:
          type: string
          example: Resource not found
    ReachedLoginConcurrentLimitErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4090002"
          example: "4090002"
        message:
          type: string
          example: This account has reached concurrent limit. Please logout some devices and try again.
    AlreadyBoughtErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4090003"
          example: "4090003"
        message:
          type: string
          example: Already bought
    PriceNeedToUpdateErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4090004"
          example: "4090004"
        message:
          type: string
          example: Error in purchase price
    InternalServerErrorResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "5000001"
          example: "5000001"
        message:
          type: string
          example: Internal server error
    ReachFavoriteItemsCountResp:
      type: object
      properties:
        error_code:
          type: string
          enum:
            - "4090101"
          example: "4090101"
        message:
          type: string
          example: Reach limit
    GetAppVersionResp:
      type: object
      properties:
        latest_version:
          type: string
          example: "3.0.0.277"
        min_version:
          type: string
          example: "3.0.0.277"
        platform:
          type: string
          example: "stb"
        update_url:
          type: string
    Notices:
      type: object
      properties:
        notices:
          type: array
          description: List of notices
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the notice
                example: "3070867"
              title:
                type: string
                description: Title of the notice
                example: "【重要なお知らせ】androidアプリのバージョンアップをお控えください。"
              content:
                type: string
                description: Content of the notice
                example: "現在、androidアプリにて最新バージョン（4.0.0.346）にバージョンアップするとアプリが起動できない不具合が発生しております。"
              display_start_at:
                description: Display start time on UI
                type: string
                example: "1643943600"
              display_end_at:
                description: Display end time on UI
                type: string
                example: "1643943600"
              start_at:
                description: notice start time
                type: string
                example: "1643943600"
              end_at:
                description: notice end time
                type: string
                example: "1643943600"
              action_button:
                type: object
                nullable: true
                properties:
                  title:
                    type: string
                    example: "サポートサイトへ"
                  link_url:
                    type: string
                    example: "https://cs.myjcom.jp/knowledgeDetail?an=002054295#anc6"
    Agreement:
      type: object
      properties:
        title:
          type: string
          description: title of the agreement
          example: "J：COMオンデマンド利用規約"
        content:
          type: string
          description: Content of the agreement
          example: "JCOM】\n※横浜ケーブルビジョンをご利用のお客さまは、画面下部【横浜ケーブルビジョンの利用規約】をご覧ください。"
    MRSS:
      type: object
      properties:
        dfpvideo:contentId:
          type: string
          description: content ID
          example: "stage_543356_4245324_dash_720_480"
        dfpvideo:ingestUrl:
          type: string
          description: ingest URL
          example: "https://my.domain/dai/example.mpd"
    FavoriteStatus:
      type: object
      properties:
        is_favorite:
          type: boolean
          description: The status whether this item is set as favorite item or not
    GetWatchHistoryResp:
      type: object
      properties:
        data:
          description: Watch history list
          type: array
          items:
            $ref: "#/components/schemas/WatchHistory"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
    WatchHistory:
      type: object
      properties:
        watch_history_id:
          description: Watch History ID
          type: string
          example: "155281"
        item_id:
          description: Item ID
          type: string
          example: "1322976"
        item_type:
          description: Item type
          type: string
          enum:
            - "video"
            - "paid_live"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00226810
        title:
          description: Title of the item
          type: string
          example: 新解釈・三國志
        thumbnail:
          description: Thumbnail URL of the item
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1618462220/saku/cf7e7d182fbc84d2d1ff6512e187a888.jpg"
        viewed_at:
          description: "Describe when user viewd this item. (unix timestamp. Unit: seconds)"
          type: string
          example: "1646293486"
        video_info:
          $ref: "#/components/schemas/VideoInfoInAccount"
        paid_live_info:
          $ref: "#/components/schemas/PaidLiveInfoInAccount"
    GetPurchasedContentsResp:
      type: object
      properties:
        data:
          description: favorite content list
          type: array
          items:
            $ref: "#/components/schemas/PurchasedContent"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
    PurchasedContent:
      type: object
      properties:
        purchase_history_id:
          description: Purchase History ID
          type: string
          example: "155281"
        item_id:
          description: Item ID
          type: string
          example: "155281"
        item_type:
          description: Item type
          type: string
          enum:
            - "video"
            - "package"
            - "paid_live"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00036494
        title:
          description: Content title
          type: string
          example: 暴風竜ヴェルドラ
        thumbnail:
          description: Thumbnail URL of the content
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        price_with_tax:
          description: Price with tax
          type: integer
          example: 2750
        purchased_at:
          description: Purchased at (timestamp)
          type: string
          example: "1642645066"
        purchase_device_type:
          description: Purchase device type
          type: string
        video_info:
          $ref: "#/components/schemas/VideoInfoInAccount"
        package_info:
          $ref: "#/components/schemas/PackageInfoInAccount"
        paid_live_info:
          $ref: "#/components/schemas/PaidLiveInfoInAccount"
    BillStats:
      type: object
      properties:
        from:
          description: Billing from (timestamp)
          type: string
        to:
          description: Billing to (timestamp)
          type: string
        total_price:
          description: Total price
          type: integer
    BillItems:
      type: object
      properties:
        data:
          description: Purchase items
          type: array
          items:
            $ref: "#/components/schemas/PurchasedContent"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
    GetPurchasePlansResp:
      type: array
      description: Get Purchase plan response
      items:
        $ref: "#/components/schemas/PurchasePlan"
    PurchasePlan:
      type: object
      nullable: true
      properties:
        id:
          description: Purchase plan id
          type: string
          example: "122011"
        mezzanine_id:
          description: Mezzanine id
          type: string
          example: "1344532"
        type:
          description: Type
          type: string
          example: "TVOD"
        name:
          description: Name
          type: string
          example: "SD版"
        discount:
          description: Discount
          type: integer
          nullable: true
          example: 200
        subdub:
          description: Subdub
          type: string
          example: "吹替"
        sales_plan:
          $ref: "#/components/schemas/SalesPlanInfo"
        price_with_tax:
          description: Price with tax
          type: integer
          example: 286
        purchasable:
          description: if this purchase plan can be purchased
          type: boolean
          example: "true"
        purchase_status:
          description: Purchase status
          type: string
          $ref: "#/components/schemas/PurchaseStatus"
        rental_status:
          description: Rental status
          type: object
          $ref: "#/components/schemas/RentalStatus"
        license_period:
          description: License period
          type: object
          $ref: "#/components/schemas/LicensePeriod"
        subscription_url:
          description: URL to JCom page to subscribe the content
          type: string
          nullable: true
        purchase_args:
          description: The args for the purchase reqeust
          type: object
          $ref: "#/components/schemas/PurchaseArgs"
    FAQTopics:
      type: object
      properties:
        faq_topics:
          description: List of FAQs grouped by topics
          type: array
          items:
            $ref: "#/components/schemas/FAQTopic"
    FAQTopic:
      type: object
      properties:
        id:
          description: FAQ topic ID
          type: string
          example: "120845"
        title:
          type: string
          example: "サービス／総合"
        qas:
          description: List of questions, answers and link urls (if any)
          type: array
          items:
            type: object
            properties:
              id:
                description: ID of the FAQ
                type: string
                example: "123"
              question:
                description: Question of the FAQ
                type: string
                example: "「J:COMオンデマンド for J:COM LINK」とはどのようなサービスですか？"
              answer:
                description: Answer of the FAQ
                type: string
                example: "J:COM LINKをご利用のお客さま向けのJ:COMオンデマンドサービスです。\\nJ:COMオンデマンドと専門チャンネルの作品・番組がご視聴いただけます。\\nJ:COMオンデマンドで配信中やテレビで購入済みの各作品をご視聴いただけるほか、テレビやパソコンでレンタルや購入した作品をご視聴いただくことも可能です。また、J:COM TVで放送中のスポーツやニュース、バラエティといった様々な番組をご視聴いただけます。\\n※アプリでは、作品の購入はできません。"
              button:
                type: object
                properties:
                  name:
                    description: Display name of the qa action button
                    type: string
                    example: "パーソナルIDをお忘れの場合"
                  link_url:
                    description: Link url of the FAQ
                    type: string
                    example: "https://cs.myjcom.jp/knowledgeDetail?an=000004673"
                nullable: true
                description: More info button for the faq (if any)
    GetFavoriteContentResp:
      type: object
      properties:
        data:
          description: favorite content list
          type: array
          items:
            $ref: "#/components/schemas/FavoriteContent"
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Total number of results
          type: integer
          format: int64
          example: 14
    FavoriteContent:
      type: object
      properties:
        favorite_content_id:
          description: Favorite contents ID
          type: string
          example: "155281"
        item_id:
          description: Item ID
          type: string
          example: "155281"
        item_type:
          description: Item type
          type: string
          enum:
            - "video"
            - "package"
            - "paid_live"
            - "artist"
            - "program"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00036494
        title:
          description: Content title
          type: string
          example: 暴風竜ヴェルドラ
        thumbnail:
          description: Thumbnail URL of the content
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        video_info:
          $ref: "#/components/schemas/VideoInfoInAccount"
        package_info:
          $ref: "#/components/schemas/PackageInfoInAccount"
        paid_live_info:
          $ref: "#/components/schemas/PaidLiveInfoInAccount"
        artist_info:
          $ref: "#/components/schemas/ArtistInfoInAccount"
        program_info:
          $ref: "#/components/schemas/ProgramInfoInAccount"
    SearchResult:
      type: object
      properties:
        page:
          description: Page number for the pagination
          type: integer
          format: int64
          example: 1
        per_page:
          description: Number of results in one page
          type: integer
          format: int64
          example: 30
        total:
          description: Number of the query results
          type: integer
          format: int64
          example: 1
        items:
          description: Items under a collection
          type: array
          items:
            $ref: "#/components/schemas/ItemInfo"
        next_page_id:
          description: "The Page ID for accesing see more page"
          type: string
    Suggestion:
      type: object
      properties:
        hits:
          type: array
          items:
            type: string
            example: "進撃の巨人 ATTACK ON TITAN"
          description: "Hits of the suggestion"
    SearchHistories:
      type: object
      properties:
        search_histories:
          type: array
          items:
            type: string
            example: "進撃の巨人"
          description: "Histories of the search"
    VideoInfoInAccount:
      type: object
      nullable: true
      description: "Describe the video information which needs to be shown in account details"
      properties:
        episode_info:
          $ref: "#/components/schemas/EpisodeInfo"
        purchase_status:
          $ref: "#/components/schemas/PurchaseStatus"
        rental_status:
          $ref: "#/components/schemas/RentalStatus"
        sales_plan:
          $ref: "#/components/schemas/SalesPlanInfo"
        video_status:
          description: "The status of this video"
          type: string
          enum:
            - "Unknown"
            - "NotStart"
            - "Published"
            - "Expired"
        publish_start_time:
          description: "Describe the start time for this item (unix timestamp. Unit: seconds)<br>"
          type: string
          nullable: true
          example: "1642645066"
        publish_end_time:
          description: "Describe the expired time for this item (unix timestamp. Unit: seconds)"
          type: string
          nullable: true
          example: "1642645066"
    PackageInfoInAccount:
      type: object
      nullable: true
      description: "Describe the package information which needs to be shown in account details"
      properties:
        purchase_status:
          $ref: "#/components/schemas/PurchaseStatus"
        rental_status:
          $ref: "#/components/schemas/RentalStatus"
    PaidLiveInfoInAccount:
      type: object
      nullable: true
      description: "Describe the paid live information which needs to be shown in account details"
      properties:
        start_time:
          type: string
          description: "The schedule start time (unix timestamp) for this live"
          example: "1648738799"
        end_time:
          type: string
          description: "The schedule end time (unix timestamp) for this live"
          example: "1648738799"
        catchup_start_time:
          type: string
          nullable: true
          description: "The catchup start time (unix timestamp) for this live"
          example: "1648738799"
        catchup_end_time:
          type: string
          description: "The catchup end time (unix timestamp) for this live"
          nullable: true
          example: "1648738799"
        paid_live_status:
          type: string
          description: "The status of this live"
          enum:
            - "Unknown"
            - "NotStart"
            - "Ongoing"
            - "Catchup"
            - "Expired"
            - "Encoding"
            - "Canceled"
            - "Suspended"
    ArtistInfoInAccount:
      type: object
      nullable: true
      description: "Describe the artist information which needs to be shown in account details"
      properties:
        occupation:
          type: string
          description: "The occupation of this artist"
          example: "役者•俳俊"
        biography:
          type: string
          description: "The iography of this artist"
          example: "若手男性俳優集团「D2」仁加入。"
    ProgramInfoInAccount:
      type: object
      nullable: true
      description: "Describe the program information which needs to be shown in account details"
      properties:
        start_time:
          type: string
          description: "The unix timestamp for start time of this program"
          example: "1655360100"
        end_time:
          type: string
          description: "The unix timestamp for end time of this program"
          example: "1655360100"
        program_status:
          type: string
          description: "The status of this program"
          enum:
            - "Unknown"
            - "NotStart"
            - "Ongoing"
            - "Ended"
            - "Catchup"
            - "Expired"
    EpisodeInfo:
      type: object
      nullable: true
      description: "Season information and series information belong to this video is the type is episode"
      properties:
        series_title:
          type: string
          description: "series title for this episode"
          example: "「転生したらスライムだった件」シリーズ"
        series_brief_title:
          type: string
          description: "series brief title for this episode"
          example: "「転生したらスライムだった件」シリーズ"
        series_id:
          type: string
          description: "series ID for this episode"
          example: "431528"
        series_meta_id:
          description: "series meta ID for this episode"
          type: string
          example: "sr00003151"
        season_title:
          description: "season title for this episode"
          type: string
          example: "転生したらスライムだった件"
        season_brief_title:
          description: "season brief title for this episode"
          type: string
          example: "転生したらスライムだった件"
        season_sequence_index:
          type: number
          description: "season sequence number for this episode. The type can be float"
          example: 1.5
        episode_sequence_index:
          type: number
          description: "episode sequence number for this episode. The type can be float"
          example: 1.5
    SubDubInfo:
      type: string
      description: The subtitle or dubbed info
      nullable: true
      enum:
        - "SUBTITLE"
        - "DUBBED"
        - "ORIGINAL"
        - "SUBTITLE+DUBBED"
    SalesPlanInfo:
      type: string
      description: Sales plan defined in the licenses
      nullable: true
      enum:
        - "4K"
        - "HD"
        - "SD"
    PurchaseStatus:
      type: string
      description: "Purchase status"
      example: "not_purchased"
      enum:
        - "unknown"
        - "not_purchased"
        - "rented"
        - "bought"
        - "preordered"
        - "premiere"
    RentalStatus:
      type: object
      nullable: true
      description: "Rental status"
      properties:
        status_type:
          type: string
          description: "the current rental state"
          example: "played"
          enum:
            - "released"
            - "unknown"
            - "not_played"
            - "played"
            - "expired"
        expired_at:
          description: "Expired unix timestamp Unit: seconds"
          type: string
          example: "1646293486"
    TVODRentalStatus:
      type: object
      nullable: true
      description: "TVOD Rental status"
      properties:
        status_type:
          type: string
          description: "the current rental state"
          example: "played"
          enum:
            - "released"
            - "bought"
            - "played"
        available_period_first_play:
          description: "the available period before first play after the content is purchased"
          type: integer
          example: 1000
          nullable: true
        available_period_after_first_play:
          description: "the available playable period after first play"
          type: integer
          example: "1629970459"
          nullable: true
        first_play_end_at:
          description: "if the content is rented but not play yet, the first play end at will be displayed"
          type: string
          example:
          nullable: true
        after_first_play_end_at:
          description: "if the content is rented and has been played, the after first play end at will be displayed"
          type: string
          example: "1629970459"
          nullable: true
    LicensePeriod:
      type: object
      description: "License period"
      properties:
        period_type:
          type: string
          description: "License period type"
          example: "unlimited"
          enum:
            - "unknown"
            - "period_limited"
            - "period_unlimited"
            - "unlimited"
        available_period_first_play_seconds:
          description: "the available period before first play after the content is purchased (only shows when period type is period_limited)"
          type: integer
          nullable: true
          example: 1000
        available_period_after_first_play_seconds:
          description: "the available playable period after first play (only shows when period type is period_limited)"
          type: integer
          nullable: true
          example: 1000
        unlimited_play_duration_seconds:
          description: "the available playable period (only shows when period type is period_unlimited)"
          type: integer
          nullable: true
          example: 1000
    GetAccountProfileResp:
      type: object
      description: "Account Profile"
      properties:
        account_profile:
          type: object
          description: "Settings in account"
          properties:
            id:
              type: string
              description: "Account ID"
              example: "1"
            name:
              type: string
              description: "Account name"
              example: "Abby"
            email:
              type: string
              description: "Account email"
              example: "xxx@xxx.com"
            age:
              type: integer
              description: "Age for this account"
              example: 22
            gender:
              type: string
              description: "Gender for this account"
              example: "MALE"
              enum:
              - UNKNOWN
              - MALE
              - FEMALE
              - CORPORATION
            is_able_to_display_ad:
              type: boolean
              description: "Is Ad able to be displayed for this account"
              example: false
            account_status:
              type: string
              description: "The status code of account , reference the service code field: https://docs.google.com/spreadsheets/d/17bXquy-AZI0fPfEvDcGK0UkqrgT4d7aL/edit#gid=946697791"
              example: "IN_USE"
              enum:
                - "UNKNOWN"
                - "BEFORE_HARDWARE_SETTING"
                - "BEFORE_APPROVAL"
                - "BEFORE_START_USING_SERVICE"
                - "IN_USE"
                - "SUSPENDED"
                - "BEFORE_FORCED_STOP"
                - "FORCED_STOP"
                - "CANCELED"
                - "FORCEDLY_CANCELED"
            purchase_method_status:
              type: string
              description: >-
                  The status code for checking payment method bundle status, Backend will provide a status table.
                  <br>0: Success
                  <br>1: Unexcepted error
                  <br>2: Cannot get pBillProfile
                  <br>3: service status not in use
                  <br>4: invaild payment method
                  <br>5: unable to purchase
                  <br>6: over purchase limit
                  <br>Reference: https://docs.google.com/spreadsheets/d/1blGeCzhfAKxaumPwH5Z_YZrT-7s5g3L0/edit#gid=139898742
              example: "0"
              enum:
                - "0"
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
                - "6"
            payment_method:
              type: string
              description: "The payment method from pbillProfile, will return empty string if user doesn't registered"
              example: "01"
              enum:
                - ""
                - "01"
                - "02"
            status_code:
              deprecated: true
              type: string
              description: "Same as purchase_method_status, it will be removed after clients migrate to purchase_method_status"
              example: "0"
              enum:
                - "0"
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
                - "6"
            jcom_user_id:
              type: string
              description: "JCOM User ID"
              example: "5eb7141145b544d9bbd52982e6a16cb9"
            jcom_user_id_hash:
              type: string
              description: "Hashed JCOM User ID"
              example: "A37583BC7EE2BB0BF371DACE9CF4B8FDD0AE396958C7BB4FA00C705F74CBFE61"
            contract_plan:
              type: "string"
              description: >-
                  Contract plan info of this account.
                  <br> Empty: no contract.
                  <br> 00: BLABO free.
                  <br> 01: BLABO paid.
                  <br> Reference: https://docs.google.com/spreadsheets/d/17bXquy-AZI0fPfEvDcGK0UkqrgT4d7aL/edit#gid=946697791&range=33:33
              example: ""
              enum:
               - ""
               - "00"
               - "01"
        subaccount_profile:
          type: object
          description: "Settings in sub-account"
          properties:
            id:
              type: string
              description: "Subaccount ID"
              example: "1"
            name:
              type: string
              description: "Account name"
              example: "Alice"
            avatar_id:
              type: string
              description: "Avatar Image ID for this account"
              example: "1"
            avatar_image_url:
              type: string
              description: "Avatar Image URL for this account"
              example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
            age_restriction:
              type: string
              description: "age restriction for this account"
              example: "G"
              enum:
                - "G"
                - "PG-12"
                - "R-15"
                - "R-18"
            is_purchase_restricted:
              type: boolean
              description: "Does this account needs pincode verification to purchase contentes?"
              example: false
    UpdateAccountProfileReq:
      type: object
      description: "Account Profile"
      properties:
        pincode_verified_token:
          type: string
          description: "The verified token which produced by check_pincode API"
          example: "UXZtUlZEQ3FFS2FSZGxxV1U2nIzW0xKUWxH2"
          nullable: true
        account_profile:
          type: object
          description: "Profile to be updated for this account"
          properties:
            is_able_to_display_ad:
              type: boolean
              description: "Is Ad able to be displayed for this account"
              example: false
              nullable: true
            pincode:
              type: string
              description: "Pin code (need pincode token)"
              nullable: true
        subaccount_profile:
          type: object
          description: "Profile to be updated for this subaccount"
          properties:
            name:
              type: string
              description: "Subaccount name"
              example: "Alice"
              nullable: true
            avatar_id:
              type: string
              description: "Avatar ID for this account"
              example: "123"
              nullable: true
            age_restriction:
              type: string
              description: "age restriction for this account (need pincode token)"
              example: "G"
              enum:
                - "G"
                - "PG-12"
                - "R-15"
                - "R-18"
              nullable: true
            is_purchase_restricted:
              type: boolean
              description: "Does this account needs pincode verification to purchase contentes? (need pincode token)"
              example: false
              nullable: true
    CreateSubAccountProfileReq:
      type: object
      description: "Account Profile"
      properties:
        account_profile:
          type: object
          description: "Profile to be updated for this account. Only effective when the token type is account"
          nullable: true
          properties:
            is_able_to_display_ad:
              type: boolean
              description: "Is Ad able to be displayed for this account"
              example: false
            pincode:
              type: string
              description: "Pin code"
        subaccount_profile:
          type: object
          description: "Profile to be updated for this subaccount"
          properties:
            name:
              type: string
              description: "Account name"
              example: "Alice"
            avatar_id:
              type: string
              description: "Avatar ID for this account"
              example: "123"
            age_restriction:
              type: string
              description: "age restriction for this account"
              example: "G"
              enum:
                - "G"
                - "PG-12"
                - "R-15"
                - "R-18"
            is_purchase_restricted:
              type: boolean
              description: "Does this account needs pincode verification to purchase contentes?"
              example: false
            favorite_genres:
              type: array
              description: "The three selected genres when cold start. Please input meta ID"
              items:
                type: string
                example: "J1"
    GetAvatarsResp:
      type: object
      description: "Account Profile"
      properties:
        avatars:
          type: array
          items:
            $ref: "#/components/schemas/Avatar"
    Avatar:
      type: object
      description: "avatar information"
      properties:
        id:
          type: string
          description: "Avatar ID"
          example: "1"
        name:
          type: string
          description: "Avatar Name"
          example: "Avatar 1"
        is_default:
          type: boolean
          description: "Describe whether this avatar is default or not"
          example: true
        image_url:
          type: string
          description: "Avatar Image URL"
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
    GetGenresMoodsResp:
      type: object
      description: "Genres"
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/GenreMoodItem"
    GenreMoodItem:
      type: object
      description: "genre brief information"
      properties:
        item_type:
          type: string
          description: "Item Type"
          example: "genre"
          enum:
            - "genre"
            - "mood"
        meta_id:
          type: string
          description: "Meta ID"
          example: "1"
        title:
          type: string
          description: "Title"
          example: "Genre 1"
        image_url:
          type: string
          example: "https://image-transfer.saku.ottfs.com/kkstream/image/upload/v1562691856/saku/c003cdec4d67bded923c4cbdbfc85001.png"
        next_page_id:
          type: string
          description: "Next page for clicking this item"
          example: "1"
    TokenResp:
      type: object
      description: "Token Response"
      properties:
        access_token:
          type: string
          description: "Access token for accessing Blabo system"
          example: "XXXXX"
        refresh_token:
          type: string
          description: >-
            Refresh token to refresh new token pair from Blabo system.
            <br> Here is no expiry time for refresh_token and also you should not concern the refresh token expire time. Just use it and try to re-login if encounter invalid token error.
          example: "XXXXX"
        expires_in:
          type: integer
          description: "Access token expires in (seconds). Please refresh access token before half of the expires_in value."
          example: 60
        expires_at:
          type: string
          description: "Access token expire time (timestamp)"
          example: "1651721787"
        type:
          type: string
          description: >-
            Token type
            <br> If there's no any subaccounts under this account, client will get `account` type token. If there are, get `subaccount` type token.
          example: "subaccount"
          enum:
            - account
            - subaccount
    Series:
      type: object
      description: "Series information"
      properties:
        id:
          description: Series ID
          type: string
          example: "155281"
        meta_id:
          description: ID from meta ingestion
          type: string
          example: ep00036494
        title:
          description: Series title
          type: string
          example: "第1話 暴風竜ヴェルドラ"
        synopsis:
          description: Synopsis of this series
          type: string
        is_new_arrival:
          description: Is this serie new arrival
          type: boolean
          example: false
        is_onsale:
          description: Is this series on sale
          type: boolean
          example: false
        subdub_info:
          description: "the sub dub info"
          type: array
          items:
            $ref: "#/components/schemas/SubDubInfo"
        adward_info:
          description: "the adward info"
          nullable: true
          type: array
          items:
            type: string
            example: "Adward"
        recommend_id:
          description: Recommend ID from Recommendation service
          nullable: true
        contain_svod:
          description: Is the series contains SVOD
          example: false
        contain_4k:
          description: Is the series contains 4k
          example: false
        rating:
          description: Rating of the series
          type: string
          example: "G"
        package_names:
          description: "the package which can be subscribed"
          nullable: true
          type: array
          items:
            type: string
            example: "メガパック"
    PaidLivePurchasePlanInfo:
      type: object
      nullable: true
      description: "Paid live purchase plan info for purchase flow and UI"
      properties:
        id:
          description: "Purchase plan ID"
          type: string
          example: "155281"
        price_with_tax:
          description: "Price with tax"
          type: integer
          example: 1200
        purchase_status:
          $ref: "#/components/schemas/PurchaseStatus"
        purchasable:
          description: "Is this purchase plan purchasable"
          type: boolean
          example: true
        purchase_start_at:
          description: "The start time which the package can be purchased"
          type: string
          example: "1642645066"
        purchase_end_at:
          description: "The end time which the package can be purchased"
          type: string
          example: "1642645066"
        purchase_args:
          description: The args for the purchase reqeust
          type: object
          $ref: "#/components/schemas/PurchaseArgs"
    PackageInfo:
      type: object
      description: "Package detail"
      properties:
        package_name:
          description: "Package name, only available when the purchase_type is GOD"
          type: string
          nullable: true
          example: "名探偵コナン 結婚前夜の密室事件パック（＃141-142）"
        purchase_type:
          description: "Purchase type, such as TVOD, GOD, EST"
          type: string
          example: "TVOD"
        price_with_tax:
          description: "Price with tax"
          type: string
          example: "1200"
        sales_plan:
          $ref: "#/components/schemas/SalesPlanInfo"
        content_id:
          description: "Content ID, may be a mezzaine ID or a paid live ID"
          type: string
          example: "111111"
        content_type:
          description: "The type of purchase content, such as mezzanine, paid_live"
          type: string
          example: "mezzanine"
        is_purchasable:
          description: "Is the package purchasable"
          type: boolean
          example: true
        purchase_start_at:
          description: "The start time which the package can be purchased"
          type: string
          example: "1642645066"
          nullable: true
        purchase_end_at:
          description: "The end time which the package can be purchased"
          type: string
          example: "1642645066"
          nullable: true
    PurchaseReq:
      type: object
      description: "Purchase request"
      properties:
        pincode_verified_token:
          description: If the subaccount need to enter pincode, verify token must be passed for purchase
          type: string
          example: "UXZtUlZEQ3FFS2FSZGxxV1U2nIzW0xKUWxH2"
        purchase_plan_id:
          description: Purchase plan ID
          type: string
          example: "155281"
        price_with_tax:
          type: string
          description: "The price of this content"
          example: "1200"
        content_id:
          type: string
          description: "The ID of this content"
          example: "11111111"
        content_type:
          type: string
          description: "The type of this content"
          example: "mezzanine"
          enum:
            - mezzanine
            - package
            - paid_live
    PurchaseArgs:
      type: object
      description: "Purchase request"
      properties:
        purchase_plan_id:
          description: Purchase plan ID
          type: string
          example: "155281"
        price_with_tax:
          type: string
          description: "The price of this content"
          example: "1200"
        content_id:
          type: string
          description: "The ID of this content"
          example: "11111111"
        content_type:
          type: string
          description: "The type of this content"
          example: "mezzanine"
          enum:
            - mezzanine
            - package
            - paid_live
    PurchaseCompletedAmplitudeResp:
      type: object
      properties:
        video_purchase_completed_amplitude_info:
          description: video purchase completed amplitude info
          type: object
          properties:
            user_id:
              type: string
            content_display_name:
              type: array
              items:
                type: string
            content_rating:
              type: array
              items:
                type: string
            genre_id:
              type: array
              items:
                type: string
            genre_name:
              type: array
              items:
                type: string
            mood_id:
              type: array
              items:
                type: string
            mood_name:
              type: array
              items:
                type: string
            start_time:
              type: array
              items:
                type: string
            end_time:
              type: array
              items:
                type: string
            flip_type:
              type: array
              items:
                type: string
            kks_content_id:
              type: array
              items:
                type: string
            series_id:
              type: array
              items:
                type: string
            series_name:
              type: array
              items:
                type: string
            license_id:
              type: array
              items:
                type: string
            meta_group_id:
              type: array
              items:
                type: string
            meta_package_id:
              type: string
              nullable: true
            package_id:
              type: string
              nullable: true
            package_name:
              type: string
              nullable: true
            package_type:
              type: string
              nullable: true
            sales_plan:
              type: array
              items:
                type: string
            service_category:
              type: array
              items:
                type: string
            price:
              type: integer
        ppv_purchase_completed_amplitude_info:
          description: PPV purchase completed amplitude info
          type: object
          properties:
            user_id:
              type: string
            ppv_content_display_name:
              type: array
              items:
                type: string
                description: "ppv name"
                example: '["螢草 菜々の剣"]'
            completed_type:
              type: string
            ppv_content_rating:
              type: array
              items:
                type: string
                description: "content rating"
                example: '["G"]'
            cp_id:
              type: array
              items:
                type: string
                description: "cp ID"
                example: '["NSTVD"]'
            genre_id:
              type: array
              items:
                type: string
                description: "genre ID"
                example: '["3", "2", "1"]'
            genre_name:
              type: array
              items:
                type: string
                description: "genre name"
                example: '["genre3", "genre2", "genre1"]'
            kks_content_id:
              type: array
              items:
                type: string
                description: "DB ID of the content"
                example: '["1"]'
            catchup_start_time:
              type: array
              items:
                type: string
                description: "catchup start time"
                example: '["1596207599"]'
              nullable: true
            catchup_end_time:
              type: array
              items:
                type: string
                description: "catchup end time"
                example: '["1596207599"]'
              nullable: true
            price:
              type: integer
    DownloadEventAmplitudeResp:
      type: object
      properties:
        amplitude_info:
          description: General amplitude log info
          type: object
          properties:
            content_streaming_type:
              type: string
            content_streaming_catchup:
              type: string
              nullable: true
            kks_content_id:
              type: string
              nullable: true
        offline_amplitude_info:
          description: Offline amplitude log info
          nullable: true
          type: object
          properties:
            mezzanine_id:
              description: "Meta ID for title.csv"
              type: string
            title_id:
              description: "Meta ID for title.csv"
              type: string
            video_display_name:
              description: "Title for this video"
              type: string
            content_display_name:
              description: "If it's series, title for aggregating series/season/video. If not, it's video title"
              type: string
            meta_group_id:
              description: "Group ID for title.csv"
              type: string
            series_id:
              description: "Series title ID in title.csv. If it's not episode, it's empty string"
              type: string
            series_name:
              description: "Series title. If it's not episode, it's empty string"
              type: string
    PlaybackEventAmplitudeResp:
      type: object
      properties:
        amplitude_info:
          description: General amplitude log info
          type: object
          properties:
            content_streaming_type:
              type: string
            content_streaming_catchup:
              type: string
              nullable: true
            kks_content_id:
              type: string
              nullable: true
        trailer_amplitude_info:
          description: Trailer amplitude log info
          type: object
          properties:
            trailer_id:
              type: string
            video_display_name:
              type: string
              nullable: true
            series_id:
              type: string
              nullable: true
            series_name:
              type: string
              nullable: true
        bonus_amplitude_info:
          description: Bonus amplitude log info
          type: object
          properties:
            kks_video_id:
              type: string
            mezzanine_id:
              type: string
            series_id:
              type: string
              nullable: true
            series_name:
              type: string
              nullable: true
        procurement_linear_amplitude_info:
          description: IP linear amplitude log info
          type: object
          properties:
            channel_id:
              type: string
            program_id:
              type: string
            meta_program_id:
              type: string
            channel_name:
              type: string
            program_name:
              type: string
            cp_id:
              type: string
              nullable: true
            program_total_duration:
              type: string
              nullable: true
            old_asset_id:
              type: string
              nullable: true
        ppv_amplitude_info:
          description: Paid live amplitude log info
          type: object
          properties:
            kks_ppv_id:
              type: string
            paid_live_id:
              type: string
            license:
              type: string
            mode:
              type: string
            ppv_name:
              type: string
            expected_event_start_time:
              type: string
            expected_event_end_time:
              type: string
            live_asset_id:
              type: string
              nullable: true
            cp_id:
              type: string
        ppv_test_video_amplitude_info:
          description: Paid live test video amplitude log info
          type: object
          properties:
            paid_live_id:
              type: string
            ppv_name:
              type: string
        self_linear_amplitude_info:
          description: Self linear amplitude log info
          type: object
          properties:
            channel_id:
              type: string
            channel_name:
              type: string
            channel_plan:
              type: string
            channel_type:
              type: string
            kks_video_id:
              type: string
            meta_group_id:
              type: string
              nullable: true
            title_id:
              type: string
            video_display_name:
              type: string
              nullable: true
            license_id:
              type: string
            meta_license_id:
              type: string
              nullable: true
            service_category:
              type: string
            package_id:
              type: string
              nullable: true
            meta_package_id:
              type: string
              nullable: true
            package_name:
              type: string
              nullable: true
            package_type:
              type: string
              nullable: true
            cp_id:
              type: string
              nullable: true
            license_new_asset_id:
              type: string
              nullable: true
            package_new_asset_id:
              type: string
              nullable: true
            series_id:
              type: string
              nullable: true
            series_name:
              type: string
              nullable: true
            season_index:
              type: string
              nullable: true
            episode_index:
              type: string
              nullable: true
            genre_id:
              type: string
              nullable: true
            genre_name:
              type: string
              nullable: true
            content_rating:
              type: string
            flip_type:
              type: integer
            sales_plan:
              type: string
              nullable: true
        vod_amplitude_info:
          description: VOD amplitude log info
          type: object
          properties:
            kks_video_id:
              type: string
            meta_group_id:
              type: string
              nullable: true
            title_id:
              type: string
            video_display_name:
              type: string
            license_id:
              type: string
            meta_license_id:
              type: string
              nullable: true
            service_category:
              type: string
            package_id:
              type: string
              nullable: true
            meta_package_id:
              type: string
              nullable: true
            package_name:
              type: string
              nullable: true
            package_type:
              type: string
              nullable: true
            cp_id:
              type: string
            discount_price:
              type: string
              nullable: true
            license_new_asset_id:
              type: string
              nullable: true
            package_new_asset_id:
              type: string
              nullable: true
            series_id:
              type: string
              nullable: true
            series_name:
              type: string
              nullable: true
            season_index:
              type: string
              nullable: true
            episode_index:
              type: string
              nullable: true
            genre_id:
              type: string
              nullable: true
            genre_name:
              type: string
              nullable: true
            content_rating:
              type: string
            flip_type:
              type: integer
            sales_plan:
              type: string
              nullable: true
    PurchaseResp:
      type: object
      description: "Purchase resp"
      properties:
        transaction_id:
          description: Transaction ID
          type: string
          example: "tx-45730052-d5a6-418b-beae-c5f24033fd3d"
    UpdatePincodeReq:
      type: object
      description: "Pincode"
      properties:
        code:
          type: string
          description: "The verified code which produced by openid API"
          example: "bi7ax75Nj4r3_81xypNrg9aj2fQ_k6FH19OjBplp5fY"
          nullable: true
        pincode:
          type: string
          description: "The input pincode which needs to be verified"
          example: "0000"
  parameters:
    X-Device-Type:
      name: X-Device-Type
      in: header
      schema:
        type: string
        enum:
          - blaboiostablet
          - blaboandroidtablet
          - blabodongle
          - blaboweb
          - blaboios
          - blaboandroid
      example: blabodongle
    X-Device-ID:
      name: X-Device-ID
      description: UUID for each device
      in: header
      schema:
        type: string
      example: 5224cead-a04c-485a-89c7-8e43b3414329
    Page:
      name: page
      description: Page number
      in: query
      schema:
        type: integer
        format: int64
        default: 1
      example: 1
    PerPage:
      name: per_page
      description: The number of items displayed in one page
      in: query
      schema:
        type: integer
        format: int64
        default: 10
      example: 10
  securitySchemes:
    x-authorization:
      type: apiKey
      name: X-Authorization
      in: header
    basicAuth:
      type: http
      scheme: basic
